{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Digital Signal Generato  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 \par
}}Digital Signal Generato}
{\comment Generated by doxygen 1.10.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Digital Signal Generato}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b dac} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gpio_button} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gpio_led} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b keypad_polling} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b signal_generator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b time_base} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b gpio_button.Button} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.Button} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dac.DAC} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.DAC} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b keypad_polling.KeyPad} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.KeyPad} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gpio_led.Led} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.Led} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.Signal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b signal_generator.Signal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polling_microPython.Time_base} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b time_base.Time_base} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b dac.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b gpio_button.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b gpio_led.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b keypad_polling.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b signal_generator.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b time_base.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dac Namespace Reference\par \pard\plain 
{\tc\tcl2 \v dac}
{\xe \v dac}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DAC}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b RESOLUTION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DAC_RANGE} = 9400\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: dac.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class to impress the DAC (8bits)\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v DAC_RANGE\:dac}
{\xe \v dac\:DAC_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dac.DAC_RANGE = 9400}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b dac.py}.}\par
}
{\xe \v RESOLUTION\:dac}
{\xe \v dac\:RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dac.RESOLUTION = 255}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b dac.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_button Namespace Reference\par \pard\plain 
{\tc\tcl2 \v gpio_button}
{\xe \v gpio_button}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Button}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: gpio_button.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class to process the button.\par
}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_led Namespace Reference\par \pard\plain 
{\tc\tcl2 \v gpio_led}
{\xe \v gpio_led}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Led}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: gpio_led.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class to process a led.\par
}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keypad_polling Namespace Reference\par \pard\plain 
{\tc\tcl2 \v keypad_polling}
{\xe \v keypad_polling}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyPad}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: keypad_polling.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class to process the keypad.\par
}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython Namespace Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython}
{\xe \v polling_microPython}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Button}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DAC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyPad}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Led}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Signal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Time_base}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkNumer} (int number)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkLetter} (int letter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkFreq} (int freq)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkAmp} (int amp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkOffset} (int offset)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b S_TO_US} = 1000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b US_TO_S} = 0.000001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SAMPLE} = 70\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b RESOLUTION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DAC_RANGE} = 10120\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b DAC_BIAS} = -60\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b my_signal} = {\b Signal}(10, 1000, 500, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b my_dac} = {\b DAC}(10, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b my_led} = {\b Led}(18, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b my_keypad} = {\b KeyPad}(2, 6, 100000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b my_button} = {\b Button}(0, 100000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_print} = {\b Time_base}(1000000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b in_state} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b key_cnt} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b param} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b boolButton} = bool(my_button.gpioPin.value())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cnt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``Author``:  MST_CDA\par
 - ``Date``:  2024-04-14\par
 - ``Version``:  1.0\par
 - ``file``: main.py\par
 \par
This proyect implements an digital signal generator.\par
\par
In this practice, we will develop a Digital Signal Generator (DSG) device. \par
The DSG device generates 4 different waveforms: sine, triangular, sawtooth, and square. \par
The user can select the type of waveform generated by the DSG using a push button. \par
Each time the button is pressed, the system switches from one waveform to the next sequentially. \par
The amplitude, DC level (offset), and signal frequency are entered using a 4x4 matrix keypad. \par
To enter the amplitude, the user will press the A key followed by the desired voltage value in \par
millivolts and the D key to finalize. Similarly, to enter the DC level, the user will press \par
the B key followed by the desired DC voltage value in millivolts and the D key to finalize. \par
Finally, to enter the frequency, the user must press the C key followed by the frequency \par
value in Hertz and the D key to finalize. The current values of Amplitude, DC Level, and \par
Frequency along with the current waveform will be printed every second via the serial or USB \par
interface to a terminal tool. \par
\par
The Amplitude should be adjustable between 100mV and 2500mV, the DC Level between 50mV and 1250mV. \par
The frequency should be adjustable between 1 Hz and 12000000 Hz. \par
Therefore, the max range for the value of the signal is: -2450mV to 3750mV.\par
\par
By default, the DSG device starts generating a sinusoidal signal with an amplitude of 1000 mV, \par
DC Level of 500mV, and frequency of 10Hz. The generated signal and its characteristics \par
should be able to be verified by a measuring instrument, multimeter, or oscilloscope.\par
\par
   The DSG device should be implemented using the following hardware components:\par
   - RPPS (Raspberry Pi Pico System) board.\par
   - 4x4 matrix keypad.\par
   - Digital-to-Analog Converter (DAC0808).\par
   - Operational Amplifier (LM358).\par
   - LED\par
\par
NOTE: Using Pin.value(), it must take into account that: \par
    - If is given a parameter and it is Pin.OUT: it sets the pin to what is given.\par
    - If no parameter is given and it is Pin.IN: it returns the current value of the pin.\par
    To other cases, its behavior is not defined.}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v checkAmp\:polling_microPython}
{\xe \v polling_microPython\:checkAmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.checkAmp (int  {\i amp})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b polling_microPython.py}.}\par
}
{\xe \v checkFreq\:polling_microPython}
{\xe \v polling_microPython\:checkFreq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.checkFreq (int  {\i freq})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b polling_microPython.py}.}\par
}
{\xe \v checkLetter\:polling_microPython}
{\xe \v polling_microPython\:checkLetter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.checkLetter (int  {\i letter})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b polling_microPython.py}.}\par
}
{\xe \v checkNumer\:polling_microPython}
{\xe \v polling_microPython\:checkNumer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.checkNumer (int  {\i number})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b polling_microPython.py}.}\par
}
{\xe \v checkOffset\:polling_microPython}
{\xe \v polling_microPython\:checkOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.checkOffset (int  {\i offset})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v boolButton\:polling_microPython}
{\xe \v polling_microPython\:boolButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.boolButton = bool(my_button.gpioPin.value())}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 649} of file {\b polling_microPython.py}.}\par
}
{\xe \v cnt\:polling_microPython}
{\xe \v polling_microPython\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.cnt}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 675} of file {\b polling_microPython.py}.}\par
}
{\xe \v DAC_BIAS\:polling_microPython}
{\xe \v polling_microPython\:DAC_BIAS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.DAC_BIAS = -60}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 507} of file {\b polling_microPython.py}.}\par
}
{\xe \v DAC_RANGE\:polling_microPython}
{\xe \v polling_microPython\:DAC_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.DAC_RANGE = 10120}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 506} of file {\b polling_microPython.py}.}\par
}
{\xe \v dbnc\:polling_microPython}
{\xe \v polling_microPython\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.dbnc}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 628} of file {\b polling_microPython.py}.}\par
}
{\xe \v in_state\:polling_microPython}
{\xe \v polling_microPython\:in_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.in_state = 0x0}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 613} of file {\b polling_microPython.py}.}\par
}
{\xe \v key_cnt\:polling_microPython}
{\xe \v polling_microPython\:key_cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.key_cnt = 0x0}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 614} of file {\b polling_microPython.py}.}\par
}
{\xe \v my_button\:polling_microPython}
{\xe \v polling_microPython\:my_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.my_button = {\b Button}(0, 100000, True)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 609} of file {\b polling_microPython.py}.}\par
}
{\xe \v my_dac\:polling_microPython}
{\xe \v polling_microPython\:my_dac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.my_dac = {\b DAC}(10, True)}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 606} of file {\b polling_microPython.py}.}\par
}
{\xe \v my_keypad\:polling_microPython}
{\xe \v polling_microPython\:my_keypad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.my_keypad = {\b KeyPad}(2, 6, 100000, True)}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 608} of file {\b polling_microPython.py}.}\par
}
{\xe \v my_led\:polling_microPython}
{\xe \v polling_microPython\:my_led}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.my_led = {\b Led}(18, True)}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 607} of file {\b polling_microPython.py}.}\par
}
{\xe \v my_signal\:polling_microPython}
{\xe \v polling_microPython\:my_signal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.my_signal = {\b Signal}(10, 1000, 500, True)}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 604} of file {\b polling_microPython.py}.}\par
}
{\xe \v nkey\:polling_microPython}
{\xe \v polling_microPython\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.nkey}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 651} of file {\b polling_microPython.py}.}\par
}
{\xe \v param\:polling_microPython}
{\xe \v polling_microPython\:param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.param = 0x0}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 615} of file {\b polling_microPython.py}.}\par
}
{\xe \v RESOLUTION\:polling_microPython}
{\xe \v polling_microPython\:RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.RESOLUTION = 255}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 505} of file {\b polling_microPython.py}.}\par
}
{\xe \v S_TO_US\:polling_microPython}
{\xe \v polling_microPython\:S_TO_US}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.S_TO_US = 1000000}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 361} of file {\b polling_microPython.py}.}\par
}
{\xe \v SAMPLE\:polling_microPython}
{\xe \v polling_microPython\:SAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.SAMPLE = 70}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 363} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_print\:polling_microPython}
{\xe \v polling_microPython\:tb_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.tb_print = {\b Time_base}(1000000, True)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 610} of file {\b polling_microPython.py}.}\par
}
{\xe \v US_TO_S\:polling_microPython}
{\xe \v polling_microPython\:US_TO_S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float polling_microPython.US_TO_S = 0.000001}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 362} of file {\b polling_microPython.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
signal_generator Namespace Reference\par \pard\plain 
{\tc\tcl2 \v signal_generator}
{\xe \v signal_generator}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Signal}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b S_TO_US} = 1000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b US_TO_S} = 0.000001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b SAMPLE} = 16\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: signal_generator.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class to generate signals.\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v S_TO_US\:signal_generator}
{\xe \v signal_generator\:S_TO_US}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.S_TO_US = 1000000}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b signal_generator.py}.}\par
}
{\xe \v SAMPLE\:signal_generator}
{\xe \v signal_generator\:SAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.SAMPLE = 16}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b signal_generator.py}.}\par
}
{\xe \v US_TO_S\:signal_generator}
{\xe \v signal_generator\:US_TO_S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float signal_generator.US_TO_S = 0.000001}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b signal_generator.py}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time_base Namespace Reference\par \pard\plain 
{\tc\tcl2 \v time_base}
{\xe \v time_base}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Time_base}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  - ``file``: time_base.py\par
 - ``Author``:  MST_CDA\par
 - ``Version``:  1.0\par
 - ``Date``:  2024-04-14\par
 - ``Description``: This module define a class for time_base, wich is the key for the polling strategy.\par
}
 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_button.Button Class Reference\par \pard\plain 
{\tc\tcl2 \v gpio_button.Button}
{\xe \v gpio_button.Button}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int gpio, int dbnc_time, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_2nd_zero} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_dbnce}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Pin {\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_dbnce}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to process the button.\par
\par
It is used as a base class for the keypad -> Herency\par
}
 \par
}{
Definition at line {\b 12} of file {\b gpio_button.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:gpio_button.Button}
{\xe \v gpio_button.Button\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.__init__ (  {\i self}, int  {\i gpio}, int  {\i dbnc_time}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for Button.\par
\par
Parameters:\par
- ``gpio`` The gpio number for the button.\par
- ``dbnc_time`` Time in us for the debouncer.\par
- ``en`` Enable button processing.\par
}
 \par
}{
Definition at line {\b 26} of file {\b gpio_button.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear_zflag\:gpio_button.Button}
{\xe \v gpio_button.Button\:clear_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.clear_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Clear the double zero flag.\par
}
 \par
}{
Definition at line {\b 50} of file {\b gpio_button.py}.}\par
}
{\xe \v is_2nd_zero\:gpio_button.Button}
{\xe \v gpio_button.Button\:is_2nd_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool gpio_button.Button.is_2nd_zero (  {\i self})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid This method returns true if a first zero was detected on keypad columns\par
}
 \par
}{
Definition at line {\b 56} of file {\b gpio_button.py}.}\par
}
{\xe \v set_zflag\:gpio_button.Button}
{\xe \v gpio_button.Button\:set_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.set_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the double zero flag.\par
}
 \par
}{
Definition at line {\b 44} of file {\b gpio_button.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dbnc\:gpio_button.Button}
{\xe \v gpio_button.Button\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gpio_button.Button.dbnc{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b gpio_button.py}.}\par
}
{\xe \v dbnc\:gpio_button.Button}
{\xe \v gpio_button.Button\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.dbnc}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b gpio_button.py}.}\par
}
{\xe \v dzero\:gpio_button.Button}
{\xe \v gpio_button.Button\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gpio_button.Button.dzero{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b gpio_button.py}.}\par
}
{\xe \v dzero\:gpio_button.Button}
{\xe \v gpio_button.Button\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.dzero}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b gpio_button.py}.}\par
}
{\xe \v en\:gpio_button.Button}
{\xe \v gpio_button.Button\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gpio_button.Button.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b gpio_button.py}.}\par
}
{\xe \v en\:gpio_button.Button}
{\xe \v gpio_button.Button\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.en}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b gpio_button.py}.}\par
}
{\xe \v gpioPin\:gpio_button.Button}
{\xe \v gpio_button.Button\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Pin gpio_button.Button.gpioPin{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b gpio_button.py}.}\par
}
{\xe \v gpioPin\:gpio_button.Button}
{\xe \v gpio_button.Button\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.gpioPin}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b gpio_button.py}.}\par
}
{\xe \v nkey\:gpio_button.Button}
{\xe \v gpio_button.Button\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gpio_button.Button.nkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b gpio_button.py}.}\par
}
{\xe \v nkey\:gpio_button.Button}
{\xe \v gpio_button.Button\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.nkey}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b gpio_button.py}.}\par
}
{\xe \v tb_dbnce\:gpio_button.Button}
{\xe \v gpio_button.Button\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} gpio_button.Button.tb_dbnce{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b gpio_button.py}.}\par
}
{\xe \v tb_dbnce\:gpio_button.Button}
{\xe \v gpio_button.Button\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_button.Button.tb_dbnce}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b gpio_button.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b gpio_button.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.Button Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.Button}
{\xe \v polling_microPython.Button}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int gpio, int dbnc_time, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_2nd_zero} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_dbnce}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Pin {\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_dbnce}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to process the button.\par
\par
It is used as a base class for the keypad -> Herency\par
}
 \par
}{
Definition at line {\b 136} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.__init__ (  {\i self}, int  {\i gpio}, int  {\i dbnc_time}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for Button.\par
\par
Parameters:\par
- ``gpio`` The gpio number for the button.\par
- ``dbnc_time`` Time in us for the debouncer.\par
- ``en`` Enable button processing.\par
}
 \par
}{
Definition at line {\b 150} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear_zflag\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:clear_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.clear_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Clear the double zero flag.\par
}
 \par
}{
Definition at line {\b 174} of file {\b polling_microPython.py}.}\par
}
{\xe \v is_2nd_zero\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:is_2nd_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.Button.is_2nd_zero (  {\i self})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid This method returns true if a first zero was detected on keypad columns\par
}
 \par
}{
Definition at line {\b 180} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_zflag\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:set_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.set_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the double zero flag.\par
}
 \par
}{
Definition at line {\b 168} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dbnc\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Button.dbnc{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 145} of file {\b polling_microPython.py}.}\par
}
{\xe \v dbnc\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.dbnc}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 161} of file {\b polling_microPython.py}.}\par
}
{\xe \v dzero\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Button.dzero{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b polling_microPython.py}.}\par
}
{\xe \v dzero\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.dzero}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Button.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.en}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioPin\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Pin polling_microPython.Button.gpioPin{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioPin\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.gpioPin}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b polling_microPython.py}.}\par
}
{\xe \v nkey\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Button.nkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 147} of file {\b polling_microPython.py}.}\par
}
{\xe \v nkey\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.nkey}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 163} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_dbnce\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} polling_microPython.Button.tb_dbnce{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_dbnce\:polling_microPython.Button}
{\xe \v polling_microPython.Button\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Button.tb_dbnce}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 166} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dac.DAC Class Reference\par \pard\plain 
{\tc\tcl2 \v dac.DAC}
{\xe \v dac.DAC}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b lsb}, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_dac} (self, int value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b digit_v}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioD} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b digit_v}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to impress the DAC (8bits).\par
}
 \par
}{
Definition at line {\b 14} of file {\b dac.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:dac.DAC}
{\xe \v dac.DAC\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dac.DAC.__init__ (  {\i self}, int  {\i lsb}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for DAC.\par
\par
Parameters:\par
- ``lsb`` The LSB position for the DAC, the eight gpios must be consecutives.\par
- ``en`` Enable DAC processing.\par
}
 \par
}{
Definition at line {\b 23} of file {\b dac.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v set_dac\:dac.DAC}
{\xe \v dac.DAC\:set_dac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dac.DAC.set_dac (  {\i self}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the DAC value.\par
\par
Parameters:\par
- ``value`` The value to be set in the DAC.\par
}
 \par
}{
Definition at line {\b 38} of file {\b dac.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v digit_v\:dac.DAC}
{\xe \v dac.DAC\:digit_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dac.DAC.digit_v{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dac.py}.}\par
}
{\xe \v digit_v\:dac.DAC}
{\xe \v dac.DAC\:digit_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dac.DAC.digit_v}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b dac.py}.}\par
}
{\xe \v en\:dac.DAC}
{\xe \v dac.DAC\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dac.DAC.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b dac.py}.}\par
}
{\xe \v en\:dac.DAC}
{\xe \v dac.DAC\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dac.DAC.en}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b dac.py}.}\par
}
{\xe \v gpioD\:dac.DAC}
{\xe \v dac.DAC\:gpioD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list dac.DAC.gpioD = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b dac.py}.}\par
}
{\xe \v lsb\:dac.DAC}
{\xe \v dac.DAC\:lsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dac.DAC.lsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dac.py}.}\par
}
{\xe \v lsb\:dac.DAC}
{\xe \v dac.DAC\:lsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dac.DAC.lsb}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b dac.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b dac.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.DAC Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.DAC}
{\xe \v polling_microPython.DAC}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b lsb}, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_dac} (self, int value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b digit_v}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioD} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b digit_v}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to impress the DAC (8bits).\par
}
 \par
}{
Definition at line {\b 509} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.DAC.__init__ (  {\i self}, int  {\i lsb}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for DAC.\par
\par
Parameters:\par
- ``lsb`` The LSB position for the DAC, the eight gpios must be consecutives.\par
- ``en`` Enable DAC processing.\par
}
 \par
}{
Definition at line {\b 518} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v set_dac\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:set_dac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.DAC.set_dac (  {\i self}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the DAC value.\par
\par
Parameters:\par
- ``value`` The value to be set in the DAC.\par
}
 \par
}{
Definition at line {\b 533} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v digit_v\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:digit_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.DAC.digit_v{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 516} of file {\b polling_microPython.py}.}\par
}
{\xe \v digit_v\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:digit_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.DAC.digit_v}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 543} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.DAC.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 513} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.DAC.en}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 527} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioD\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:gpioD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list polling_microPython.DAC.gpioD = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 514} of file {\b polling_microPython.py}.}\par
}
{\xe \v lsb\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:lsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.DAC.lsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 515} of file {\b polling_microPython.py}.}\par
}
{\xe \v lsb\:polling_microPython.DAC}
{\xe \v polling_microPython.DAC\:lsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.DAC.lsb}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 528} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keypad_polling.KeyPad Class Reference\par \pard\plain 
{\tc\tcl2 \v keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b rlsb}, int {\b clsb}, int dbnc_time, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b captureKey} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b captureCols} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b decode} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_seq} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_key} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_2nd_zero} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cols}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ckey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b rlsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_dbnce}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cols}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ckey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rlsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_dbnce}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b history} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioC} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioR} = []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b keypad_polling.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.__init__ (  {\i self}, int  {\i rlsb}, int  {\i clsb}, int  {\i dbnc_time}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for KeyPad.\par
\par
Parameters:\par
- ``rlsb`` The rows LSB position for keypad rows, the four gpios for rows must be consecutives.\par
- ``clsb`` The cols LSB position for keypad cols, the four gpios for cols must be consecutives.\par
- ``dbnc_time`` Time in us for the debouncer.\par
- ``en`` Enable keypad processing.\par
}
 \par
}{
Definition at line {\b 30} of file {\b keypad_polling.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v captureCols\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:captureCols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.captureCols (  {\i self})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Capture the columns state.\par
}
 \par
}{
Definition at line {\b 80} of file {\b keypad_polling.py}.}\par
}
{\xe \v captureKey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:captureKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.captureKey (  {\i self})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Capture the key pressed.\par
Before this metod, it must be called the captureCols method.\par
}
 \par
}{
Definition at line {\b 65} of file {\b keypad_polling.py}.}\par
}
{\xe \v clear_zflag\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:clear_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.clear_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Clear the double zero flag.\par
}
 \par
}{
Definition at line {\b 151} of file {\b keypad_polling.py}.}\par
}
{\xe \v decode\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:decode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.decode (  {\i self})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Decode the key pressed.\par
}
 \par
}{
Definition at line {\b 88} of file {\b keypad_polling.py}.}\par
}
{\xe \v gen_seq\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:gen_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.gen_seq (  {\i self})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate the row sequence.\par
}
 \par
}{
Definition at line {\b 125} of file {\b keypad_polling.py}.}\par
}
{\xe \v get_key\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:get_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 int keypad_polling.KeyPad.get_key (  {\i self})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Get the last key pressed.\par
}
 \par
}{
Definition at line {\b 139} of file {\b keypad_polling.py}.}\par
}
{\xe \v is_2nd_zero\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:is_2nd_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool keypad_polling.KeyPad.is_2nd_zero (  {\i self})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid This method returns true if a first zero was detected on keypad columns\par
}
 \par
}{
Definition at line {\b 157} of file {\b keypad_polling.py}.}\par
}
{\xe \v set_zflag\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:set_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.set_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the double zero flag.\par
}
 \par
}{
Definition at line {\b 145} of file {\b keypad_polling.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ckey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:ckey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.ckey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b keypad_polling.py}.}\par
}
{\xe \v ckey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:ckey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.ckey}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b keypad_polling.py}.}\par
}
{\xe \v clsb\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:clsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.clsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b keypad_polling.py}.}\par
}
{\xe \v clsb\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:clsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.clsb}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b keypad_polling.py}.}\par
}
{\xe \v cnt\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.cnt{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b keypad_polling.py}.}\par
}
{\xe \v cnt\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.cnt}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b keypad_polling.py}.}\par
}
{\xe \v cols\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:cols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.cols{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b keypad_polling.py}.}\par
}
{\xe \v cols\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:cols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.cols}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b keypad_polling.py}.}\par
}
{\xe \v dbnc\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool keypad_polling.KeyPad.dbnc{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b keypad_polling.py}.}\par
}
{\xe \v dbnc\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.dbnc}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b keypad_polling.py}.}\par
}
{\xe \v dkey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.dkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b keypad_polling.py}.}\par
}
{\xe \v dkey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.dkey}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b keypad_polling.py}.}\par
}
{\xe \v dzero\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool keypad_polling.KeyPad.dzero{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b keypad_polling.py}.}\par
}
{\xe \v dzero\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.dzero}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b keypad_polling.py}.}\par
}
{\xe \v en\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool keypad_polling.KeyPad.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b keypad_polling.py}.}\par
}
{\xe \v en\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.en}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b keypad_polling.py}.}\par
}
{\xe \v gpioC\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:gpioC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list keypad_polling.KeyPad.gpioC = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b keypad_polling.py}.}\par
}
{\xe \v gpioR\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:gpioR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list keypad_polling.KeyPad.gpioR = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b keypad_polling.py}.}\par
}
{\xe \v history\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list keypad_polling.KeyPad.history = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b keypad_polling.py}.}\par
}
{\xe \v nkey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool keypad_polling.KeyPad.nkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b keypad_polling.py}.}\par
}
{\xe \v nkey\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.nkey}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b keypad_polling.py}.}\par
}
{\xe \v rlsb\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:rlsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.rlsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b keypad_polling.py}.}\par
}
{\xe \v rlsb\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:rlsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.rlsb}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b keypad_polling.py}.}\par
}
{\xe \v seq\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int keypad_polling.KeyPad.seq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b keypad_polling.py}.}\par
}
{\xe \v seq\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.seq}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b keypad_polling.py}.}\par
}
{\xe \v tb_dbnce\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} keypad_polling.KeyPad.tb_dbnce{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b keypad_polling.py}.}\par
}
{\xe \v tb_dbnce\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.tb_dbnce}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b keypad_polling.py}.}\par
}
{\xe \v tb_seq\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:tb_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} keypad_polling.KeyPad.tb_seq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b keypad_polling.py}.}\par
}
{\xe \v tb_seq\:keypad_polling.KeyPad}
{\xe \v keypad_polling.KeyPad\:tb_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
keypad_polling.KeyPad.tb_seq}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b keypad_polling.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b keypad_polling.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.KeyPad Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b rlsb}, int {\b clsb}, int dbnc_time, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b captureKey} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b captureCols} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b decode} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_seq} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_key} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear_zflag} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_2nd_zero} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cols}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ckey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b rlsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_dbnce}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cols}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ckey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rlsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clsb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dzero}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_seq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_dbnce}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b history} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioC} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b gpioR} = []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 193} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.__init__ (  {\i self}, int  {\i rlsb}, int  {\i clsb}, int  {\i dbnc_time}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for KeyPad.\par
\par
Parameters:\par
- ``rlsb`` The rows LSB position for keypad rows, the four gpios for rows must be consecutives.\par
- ``clsb`` The cols LSB position for keypad cols, the four gpios for cols must be consecutives.\par
- ``dbnc_time`` Time in us for the debouncer.\par
- ``en`` Enable keypad processing.\par
}
 \par
}{
Definition at line {\b 211} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v captureCols\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:captureCols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.captureCols (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Capture the columns state.\par
}
 \par
}{
Definition at line {\b 261} of file {\b polling_microPython.py}.}\par
}
{\xe \v captureKey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:captureKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.captureKey (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Capture the key pressed.\par
Before this metod, it must be called the captureCols method.\par
}
 \par
}{
Definition at line {\b 246} of file {\b polling_microPython.py}.}\par
}
{\xe \v clear_zflag\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:clear_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.clear_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Clear the double zero flag.\par
}
 \par
}{
Definition at line {\b 341} of file {\b polling_microPython.py}.}\par
}
{\xe \v decode\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:decode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.decode (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Decode the key pressed.\par
}
 \par
}{
Definition at line {\b 269} of file {\b polling_microPython.py}.}\par
}
{\xe \v gen_seq\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:gen_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.gen_seq (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate the row sequence.\par
}
 \par
}{
Definition at line {\b 306} of file {\b polling_microPython.py}.}\par
}
{\xe \v get_key\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:get_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 int polling_microPython.KeyPad.get_key (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Get the last key pressed.\par
}
 \par
}{
Definition at line {\b 329} of file {\b polling_microPython.py}.}\par
}
{\xe \v is_2nd_zero\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:is_2nd_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool polling_microPython.KeyPad.is_2nd_zero (  {\i self})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid This method returns true if a first zero was detected on keypad columns\par
}
 \par
}{
Definition at line {\b 347} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_zflag\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:set_zflag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.set_zflag (  {\i self})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the double zero flag.\par
}
 \par
}{
Definition at line {\b 335} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ckey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:ckey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.ckey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b polling_microPython.py}.}\par
}
{\xe \v ckey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:ckey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.ckey}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 228} of file {\b polling_microPython.py}.}\par
}
{\xe \v clsb\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:clsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.clsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 200} of file {\b polling_microPython.py}.}\par
}
{\xe \v clsb\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:clsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.clsb}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b polling_microPython.py}.}\par
}
{\xe \v cnt\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.cnt{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 195} of file {\b polling_microPython.py}.}\par
}
{\xe \v cnt\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.cnt}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 226} of file {\b polling_microPython.py}.}\par
}
{\xe \v cols\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:cols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.cols{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 194} of file {\b polling_microPython.py}.}\par
}
{\xe \v cols\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:cols}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.cols}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 225} of file {\b polling_microPython.py}.}\par
}
{\xe \v dbnc\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.KeyPad.dbnc{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 204} of file {\b polling_microPython.py}.}\par
}
{\xe \v dbnc\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dbnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.dbnc}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 235} of file {\b polling_microPython.py}.}\par
}
{\xe \v dkey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.dkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b polling_microPython.py}.}\par
}
{\xe \v dkey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.dkey}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b polling_microPython.py}.}\par
}
{\xe \v dzero\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.KeyPad.dzero{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 202} of file {\b polling_microPython.py}.}\par
}
{\xe \v dzero\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:dzero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.dzero}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.KeyPad.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 201} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.en}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 232} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioC\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:gpioC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list polling_microPython.KeyPad.gpioC = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 208} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioR\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:gpioR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list polling_microPython.KeyPad.gpioR = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 209} of file {\b polling_microPython.py}.}\par
}
{\xe \v history\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list polling_microPython.KeyPad.history = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 207} of file {\b polling_microPython.py}.}\par
}
{\xe \v nkey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.KeyPad.nkey{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 203} of file {\b polling_microPython.py}.}\par
}
{\xe \v nkey\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:nkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.nkey}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 234} of file {\b polling_microPython.py}.}\par
}
{\xe \v rlsb\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:rlsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.rlsb{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 199} of file {\b polling_microPython.py}.}\par
}
{\xe \v rlsb\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:rlsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.rlsb}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 230} of file {\b polling_microPython.py}.}\par
}
{\xe \v seq\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.KeyPad.seq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b polling_microPython.py}.}\par
}
{\xe \v seq\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.seq}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_dbnce\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} polling_microPython.KeyPad.tb_dbnce{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 206} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_dbnce\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:tb_dbnce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.tb_dbnce}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 238} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_seq\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:tb_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} polling_microPython.KeyPad.tb_seq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 205} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_seq\:polling_microPython.KeyPad}
{\xe \v polling_microPython.KeyPad\:tb_seq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.KeyPad.tb_seq}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 237} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_led.Led Class Reference\par \pard\plain 
{\tc\tcl2 \v gpio_led.Led}
{\xe \v gpio_led.Led}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int gpio, bool {\b on})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b toggle} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b on}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gpioPin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Pin {\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b on}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to process a led.\par
}
 \par
}{
Definition at line {\b 11} of file {\b gpio_led.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:gpio_led.Led}
{\xe \v gpio_led.Led\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.__init__ (  {\i self}, int  {\i gpio}, bool  {\i on})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for Led.\par
\par
Parameters:\par
- ``gpio`` The gpio number for the led.\par
- ``state`` True to turn on the led, False to turn off the led.\par
}
 \par
}{
Definition at line {\b 18} of file {\b gpio_led.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear\:gpio_led.Led}
{\xe \v gpio_led.Led\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.clear (  {\i self})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Turn off the led.\par
}
 \par
}{
Definition at line {\b 38} of file {\b gpio_led.py}.}\par
}
{\xe \v set\:gpio_led.Led}
{\xe \v gpio_led.Led\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.set (  {\i self})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Turn on the led.\par
}
 \par
}{
Definition at line {\b 31} of file {\b gpio_led.py}.}\par
}
{\xe \v toggle\:gpio_led.Led}
{\xe \v gpio_led.Led\:toggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.toggle (  {\i self})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Toggle the led.\par
}
 \par
}{
Definition at line {\b 45} of file {\b gpio_led.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v gpioPin\:gpio_led.Led}
{\xe \v gpio_led.Led\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Pin gpio_led.Led.gpioPin{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b gpio_led.py}.}\par
}
{\xe \v gpioPin\:gpio_led.Led}
{\xe \v gpio_led.Led\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.gpioPin}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b gpio_led.py}.}\par
}
{\xe \v on\:gpio_led.Led}
{\xe \v gpio_led.Led\:on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gpio_led.Led.on{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b gpio_led.py}.}\par
}
{\xe \v on\:gpio_led.Led}
{\xe \v gpio_led.Led\:on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gpio_led.Led.on}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b gpio_led.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b gpio_led.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.Led Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.Led}
{\xe \v polling_microPython.Led}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int gpio, bool {\b on})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b clear} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b toggle} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b on}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gpioPin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Pin {\b gpioPin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b on}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class to process a led.\par
}
 \par
}{
Definition at line {\b 553} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.__init__ (  {\i self}, int  {\i gpio}, bool  {\i on})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for Led.\par
\par
Parameters:\par
- ``gpio`` The gpio number for the led.\par
- ``state`` True to turn on the led, False to turn off the led.\par
}
 \par
}{
Definition at line {\b 560} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.clear (  {\i self})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Turn off the led.\par
}
 \par
}{
Definition at line {\b 580} of file {\b polling_microPython.py}.}\par
}
{\xe \v set\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.set (  {\i self})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Turn on the led.\par
}
 \par
}{
Definition at line {\b 573} of file {\b polling_microPython.py}.}\par
}
{\xe \v toggle\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:toggle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.toggle (  {\i self})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Toggle the led.\par
}
 \par
}{
Definition at line {\b 587} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v gpioPin\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Pin polling_microPython.Led.gpioPin{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 557} of file {\b polling_microPython.py}.}\par
}
{\xe \v gpioPin\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:gpioPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.gpioPin}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 570} of file {\b polling_microPython.py}.}\par
}
{\xe \v on\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Led.on{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 558} of file {\b polling_microPython.py}.}\par
}
{\xe \v on\:polling_microPython.Led}
{\xe \v polling_microPython.Led\:on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Led.on}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 569} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.Signal Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.Signal}
{\xe \v polling_microPython.Signal}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b freq}, int {\b amp}, int {\b offset}, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_sin} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_tri} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_saw} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_sqr} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b calculate} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_value} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_ss} (self, int {\b ss})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_freq} (self, int {\b freq})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_amp} (self, int {\b amp})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_offset} (self, int {\b offset})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ss}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b freq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b amp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_gen}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ss}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b freq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b amp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b arrayV} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_gen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 365} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.__init__ (  {\i self}, int  {\i freq}, int  {\i amp}, int  {\i offset}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for signal_generator.\par
\par
Parameters:\par
- ``freq`` Frequency in Hz.\par
- ``amp`` Amplitude in mV.\par
- ``offset`` Offset in mV.\par
- ``en`` Enable the signal generator.\par
}
 \par
}{
Definition at line {\b 376} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v calculate\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:calculate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.calculate (  {\i self})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Update the value of the signal generator according to the signal state.\par
}
 \par
}{
Definition at line {\b 429} of file {\b polling_microPython.py}.}\par
}
{\xe \v gen_saw\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:gen_saw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.gen_saw (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a sawtooth signal.\par
}
 \par
}{
Definition at line {\b 413} of file {\b polling_microPython.py}.}\par
}
{\xe \v gen_sin\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:gen_sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.gen_sin (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a sinusoidal signal.\par
}
 \par
}{
Definition at line {\b 397} of file {\b polling_microPython.py}.}\par
}
{\xe \v gen_sqr\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:gen_sqr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.gen_sqr (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a square signal.\par
}
 \par
}{
Definition at line {\b 419} of file {\b polling_microPython.py}.}\par
}
{\xe \v gen_tri\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:gen_tri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.gen_tri (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a triangular signal.\par
}
 \par
}{
Definition at line {\b 403} of file {\b polling_microPython.py}.}\par
}
{\xe \v get_value\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:get_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 int polling_microPython.Signal.get_value (  {\i self})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Get the current value of the signal generator.\par
\par
Returns:\par
- ``value`` Current value in mV.\par
}
 \par
}{
Definition at line {\b 455} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_amp\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:set_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.set_amp (  {\i self}, int  {\i amp})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the amplitude in mV.\par
\par
Parameters:\par
- ``amp`` Amplitude in mV.\par
}
 \par
}{
Definition at line {\b 483} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_freq\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:set_freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.set_freq (  {\i self}, int  {\i freq})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the frequency in Hz.\par
\par
Parameters:\par
- ``freq`` Frequency in Hz.\par
}
 \par
}{
Definition at line {\b 473} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_offset\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:set_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.set_offset (  {\i self}, int  {\i offset})}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the offset in mV.\par
\par
Parameters:\par
- ``offset`` Offset in mV.\par
}
 \par
}{
Definition at line {\b 492} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_ss\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:set_ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.set_ss (  {\i self}, int  {\i ss})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the signal state.\par
\par
Parameters:\par
- ``ss`` Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square\par
}
 \par
}{
Definition at line {\b 464} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v amp\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.amp{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 369} of file {\b polling_microPython.py}.}\par
}
{\xe \v amp\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.amp}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 389} of file {\b polling_microPython.py}.}\par
}
{\xe \v arrayV\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:arrayV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list polling_microPython.Signal.arrayV = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 372} of file {\b polling_microPython.py}.}\par
}
{\xe \v cnt\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.cnt{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 373} of file {\b polling_microPython.py}.}\par
}
{\xe \v cnt\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.cnt}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 392} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Signal.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 367} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.en}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 387} of file {\b polling_microPython.py}.}\par
}
{\xe \v freq\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.freq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 368} of file {\b polling_microPython.py}.}\par
}
{\xe \v freq\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.freq}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 388} of file {\b polling_microPython.py}.}\par
}
{\xe \v offset\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.offset{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 370} of file {\b polling_microPython.py}.}\par
}
{\xe \v offset\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.offset}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 390} of file {\b polling_microPython.py}.}\par
}
{\xe \v ss\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.ss{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 366} of file {\b polling_microPython.py}.}\par
}
{\xe \v ss\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.ss}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 386} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_gen\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:tb_gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} polling_microPython.Signal.tb_gen{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 374} of file {\b polling_microPython.py}.}\par
}
{\xe \v tb_gen\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:tb_gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.tb_gen}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 393} of file {\b polling_microPython.py}.}\par
}
{\xe \v value\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Signal.value{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 371} of file {\b polling_microPython.py}.}\par
}
{\xe \v value\:polling_microPython.Signal}
{\xe \v polling_microPython.Signal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Signal.value}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 391} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
signal_generator.Signal Class Reference\par \pard\plain 
{\tc\tcl2 \v signal_generator.Signal}
{\xe \v signal_generator.Signal}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int {\b freq}, int {\b amp}, int {\b offset}, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_sin} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_tri} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_saw} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gen_sqr} (self, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b calculate} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_value} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_ss} (self, int {\b ss})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_freq} (self, int {\b freq})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_amp} (self, int {\b amp})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_offset} (self, int {\b offset})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ss}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b freq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b amp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tb_gen}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ss}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b freq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b amp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
list {\b arrayV} = []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Time_base} {\b tb_gen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 17} of file {\b signal_generator.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.__init__ (  {\i self}, int  {\i freq}, int  {\i amp}, int  {\i offset}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for signal_generator.\par
\par
Parameters:\par
- ``freq`` Frequency in Hz.\par
- ``amp`` Amplitude in mV.\par
- ``offset`` Offset in mV.\par
- ``en`` Enable the signal generator.\par
}
 \par
}{
Definition at line {\b 28} of file {\b signal_generator.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v calculate\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:calculate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.calculate (  {\i self})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Update the value of the signal generator according to the signal state.\par
}
 \par
}{
Definition at line {\b 81} of file {\b signal_generator.py}.}\par
}
{\xe \v gen_saw\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:gen_saw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.gen_saw (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a sawtooth signal.\par
}
 \par
}{
Definition at line {\b 65} of file {\b signal_generator.py}.}\par
}
{\xe \v gen_sin\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:gen_sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.gen_sin (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a sinusoidal signal.\par
}
 \par
}{
Definition at line {\b 49} of file {\b signal_generator.py}.}\par
}
{\xe \v gen_sqr\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:gen_sqr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.gen_sqr (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a square signal.\par
}
 \par
}{
Definition at line {\b 71} of file {\b signal_generator.py}.}\par
}
{\xe \v gen_tri\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:gen_tri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.gen_tri (  {\i self}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Generate a triangular signal.\par
}
 \par
}{
Definition at line {\b 55} of file {\b signal_generator.py}.}\par
}
{\xe \v get_value\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:get_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 int signal_generator.Signal.get_value (  {\i self})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Get the current value of the signal generator.\par
\par
Returns:\par
- ``value`` Current value in mV.\par
}
 \par
}{
Definition at line {\b 107} of file {\b signal_generator.py}.}\par
}
{\xe \v set_amp\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:set_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.set_amp (  {\i self}, int  {\i amp})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the amplitude in mV.\par
\par
Parameters:\par
- ``amp`` Amplitude in mV.\par
}
 \par
}{
Definition at line {\b 135} of file {\b signal_generator.py}.}\par
}
{\xe \v set_freq\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:set_freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.set_freq (  {\i self}, int  {\i freq})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the frequency in Hz.\par
\par
Parameters:\par
- ``freq`` Frequency in Hz.\par
}
 \par
}{
Definition at line {\b 125} of file {\b signal_generator.py}.}\par
}
{\xe \v set_offset\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:set_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.set_offset (  {\i self}, int  {\i offset})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the offset in mV.\par
\par
Parameters:\par
- ``offset`` Offset in mV.\par
}
 \par
}{
Definition at line {\b 144} of file {\b signal_generator.py}.}\par
}
{\xe \v set_ss\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:set_ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.set_ss (  {\i self}, int  {\i ss})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the signal state.\par
\par
Parameters:\par
- ``ss`` Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square\par
}
 \par
}{
Definition at line {\b 116} of file {\b signal_generator.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v amp\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.amp{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b signal_generator.py}.}\par
}
{\xe \v amp\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.amp}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b signal_generator.py}.}\par
}
{\xe \v arrayV\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:arrayV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
list signal_generator.Signal.arrayV = []{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b signal_generator.py}.}\par
}
{\xe \v cnt\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.cnt{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b signal_generator.py}.}\par
}
{\xe \v cnt\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.cnt}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b signal_generator.py}.}\par
}
{\xe \v en\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool signal_generator.Signal.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b signal_generator.py}.}\par
}
{\xe \v en\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.en}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b signal_generator.py}.}\par
}
{\xe \v freq\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.freq{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b signal_generator.py}.}\par
}
{\xe \v freq\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:freq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.freq}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b signal_generator.py}.}\par
}
{\xe \v offset\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.offset{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b signal_generator.py}.}\par
}
{\xe \v offset\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.offset}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b signal_generator.py}.}\par
}
{\xe \v ss\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.ss{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b signal_generator.py}.}\par
}
{\xe \v ss\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.ss}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b signal_generator.py}.}\par
}
{\xe \v tb_gen\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:tb_gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Time_base} signal_generator.Signal.tb_gen{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b signal_generator.py}.}\par
}
{\xe \v tb_gen\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:tb_gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.tb_gen}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b signal_generator.py}.}\par
}
{\xe \v value\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int signal_generator.Signal.value{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b signal_generator.py}.}\par
}
{\xe \v value\:signal_generator.Signal}
{\xe \v signal_generator.Signal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
signal_generator.Signal.value}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b signal_generator.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b signal_generator.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.Time_base Class Reference\par \pard\plain 
{\tc\tcl2 \v polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base}
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int us, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b check} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b update} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_next} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b enable} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b disable} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_delta} (self, int us)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b next}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b delta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b delta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class for time_base.\par
It is the key for the polling strategy.\par
}
 \par
}{
Definition at line {\b 66} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.__init__ (  {\i self}, int  {\i us}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for time_base.\par
\par
Parameters:\par
- ``us`` Time in microseconds.\par
- ``en`` Enable the timer.\par
}
 \par
}{
Definition at line {\b 76} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v check\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:check}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.check (  {\i self})}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Check if the timer has expired.\par
\par
Returns:\par
- ``bool`` True if the timer has expired.\par
}
 \par
}{
Definition at line {\b 88} of file {\b polling_microPython.py}.}\par
}
{\xe \v disable\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:disable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.disable (  {\i self})}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Disable the timer.\par
}
 \par
}{
Definition at line {\b 115} of file {\b polling_microPython.py}.}\par
}
{\xe \v enable\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.enable (  {\i self})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Enable the timer.\par
}
 \par
}{
Definition at line {\b 109} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_delta\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:set_delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.set_delta (  {\i self}, int  {\i us})}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the time in microseconds.\par
\par
Parameters:\par
- ``us`` Time in microseconds.\par
}
 \par
}{
Definition at line {\b 121} of file {\b polling_microPython.py}.}\par
}
{\xe \v set_next\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:set_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.set_next (  {\i self})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the next time in microseconds.\par
}
 \par
}{
Definition at line {\b 103} of file {\b polling_microPython.py}.}\par
}
{\xe \v update\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.update (  {\i self})}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Update the next time in microseconds.\par
}
 \par
}{
Definition at line {\b 97} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v delta\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Time_base.delta{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b polling_microPython.py}.}\par
}
{\xe \v delta\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.delta}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool polling_microPython.Time_base.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b polling_microPython.py}.}\par
}
{\xe \v en\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.en}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 86} of file {\b polling_microPython.py}.}\par
}
{\xe \v next\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int polling_microPython.Time_base.next{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b polling_microPython.py}.}\par
}
{\xe \v next\:polling_microPython.Time_base}
{\xe \v polling_microPython.Time_base\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
polling_microPython.Time_base.next}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b polling_microPython.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b polling_microPython.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time_base.Time_base Class Reference\par \pard\plain 
{\tc\tcl2 \v time_base.Time_base}
{\xe \v time_base.Time_base}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __init__} (self, int us, bool {\b en})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b check} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b update} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_next} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b enable} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b disable} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_delta} (self, int us)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b next}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b delta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b en}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b delta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b en}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Class for time_base.\par
It is the key for the polling strategy.\par
}
 \par
}{
Definition at line {\b 11} of file {\b time_base.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:time_base.Time_base}
{\xe \v time_base.Time_base\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.__init__ (  {\i self}, int  {\i us}, bool  {\i en})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Constructor for time_base.\par
\par
Parameters:\par
- ``us`` Time in microseconds.\par
- ``en`` Enable the timer.\par
}
 \par
}{
Definition at line {\b 21} of file {\b time_base.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v check\:time_base.Time_base}
{\xe \v time_base.Time_base\:check}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.check (  {\i self})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Check if the timer has expired.\par
\par
Returns:\par
- ``bool`` True if the timer has expired.\par
}
 \par
}{
Definition at line {\b 33} of file {\b time_base.py}.}\par
}
{\xe \v disable\:time_base.Time_base}
{\xe \v time_base.Time_base\:disable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.disable (  {\i self})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Disable the timer.\par
}
 \par
}{
Definition at line {\b 60} of file {\b time_base.py}.}\par
}
{\xe \v enable\:time_base.Time_base}
{\xe \v time_base.Time_base\:enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.enable (  {\i self})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Enable the timer.\par
}
 \par
}{
Definition at line {\b 54} of file {\b time_base.py}.}\par
}
{\xe \v set_delta\:time_base.Time_base}
{\xe \v time_base.Time_base\:set_delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.set_delta (  {\i self}, int  {\i us})}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the time in microseconds.\par
\par
Parameters:\par
- ``us`` Time in microseconds.\par
}
 \par
}{
Definition at line {\b 66} of file {\b time_base.py}.}\par
}
{\xe \v set_next\:time_base.Time_base}
{\xe \v time_base.Time_base\:set_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.set_next (  {\i self})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set the next time in microseconds.\par
}
 \par
}{
Definition at line {\b 48} of file {\b time_base.py}.}\par
}
{\xe \v update\:time_base.Time_base}
{\xe \v time_base.Time_base\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.update (  {\i self})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Update the next time in microseconds.\par
}
 \par
}{
Definition at line {\b 42} of file {\b time_base.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v delta\:time_base.Time_base}
{\xe \v time_base.Time_base\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int time_base.Time_base.delta{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b time_base.py}.}\par
}
{\xe \v delta\:time_base.Time_base}
{\xe \v time_base.Time_base\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.delta}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b time_base.py}.}\par
}
{\xe \v en\:time_base.Time_base}
{\xe \v time_base.Time_base\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool time_base.Time_base.en{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b time_base.py}.}\par
}
{\xe \v en\:time_base.Time_base}
{\xe \v time_base.Time_base\:en}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.en}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b time_base.py}.}\par
}
{\xe \v next\:time_base.Time_base}
{\xe \v time_base.Time_base\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int time_base.Time_base.next{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b time_base.py}.}\par
}
{\xe \v next\:time_base.Time_base}
{\xe \v time_base.Time_base\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_base.Time_base.next}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b time_base.py}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/{\b time_base.py}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/dac.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/dac.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/dac.py}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dac.DAC}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b dac}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dac.RESOLUTION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dac.DAC_RANGE} = 9400\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dac.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/dac.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/dac.py}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: dac.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class to impress the DAC (8bits)}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} machine {\cf17 import} Pin\par
00010 \par
00011 RESOLUTION = 255        {\cf20 # 8 bits}\par
00012 DAC_RANGE = 9400        {\cf20 # 0 to 9.3V}\par
00013 \par
00014 {\cf17 class }DAC:\par
00015     {\cf22 """}\par
00016 {\cf22     Class to impress the DAC (8bits).}\par
00017 {\cf22     """}\par
00018     en: bool                {\cf20 # Enable the DAC processing}\par
00019     gpioD = []   {\cf20 # The eight gpios for the DAC}\par
00020     lsb: int                {\cf20 # The LSB position for the DAC, the eight gpios must be consecutives.}\par
00021     digit_v: int            {\cf20 # The digit value for the DAC}\par
00022 \par
00023     {\cf17 def }__init__(self, lsb: int, en: bool):\par
00024         {\cf22 """}\par
00025 {\cf22         Constructor for DAC.}\par
00026 {\cf22 }\par
00027 {\cf22         Parameters:}\par
00028 {\cf22         - ``lsb`` The LSB position for the DAC, the eight gpios must be consecutives.}\par
00029 {\cf22         - ``en`` Enable DAC processing.}\par
00030 {\cf22         """}\par
00031         {\cf20 # Initialize the DAC variables}\par
00032         self.enen = en\par
00033         self.lsblsb = lsb\par
00034         {\cf20 # Initialize the DAC gpios}\par
00035         {\cf19 for} i {\cf19 in} range(8):\par
00036             self.gpioD.append(Pin(lsb + i, Pin.OUT)) \par
00037 \par
00038     {\cf17 def }set_dac(self, value: int):\par
00039         {\cf22 """}\par
00040 {\cf22         Set the DAC value.}\par
00041 {\cf22 }\par
00042 {\cf22         Parameters:}\par
00043 {\cf22         - ``value`` The value to be set in the DAC.}\par
00044 {\cf22         """}\par
00045         {\cf19 if} {\cf19 not} self.enen:\par
00046             {\cf19 return}\par
00047 \par
00048         self.digit_vdigit_v = (value + 5000)*RESOLUTION//DAC_RANGE\par
00049         {\cf19 for} i {\cf19 in} range(8):\par
00050             self.gpioD[i].value(self.digit_vdigit_v % 2)\par
00051             self.digit_vdigit_v = self.digit_vdigit_v // 2\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_button.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_button.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_button.py}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b gpio_button.Button}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b gpio_button}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_button.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_button.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_button.py}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: gpio_button.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class to process the button.}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} machine {\cf17 import} Pin\par
00010 {\cf17 from} time_base {\cf17 import} Time_base\par
00011 \par
00012 {\cf17 class }Button:\par
00013     {\cf22 """}\par
00014 {\cf22     Class to process the button.}\par
00015 {\cf22 }\par
00016 {\cf22     It is used as a base class for the keypad -> Herency}\par
00017 {\cf22     """}\par
00018     gpioPin: Pin        {\cf20 # The gpio for the button}\par
00019     en: bool            {\cf20 # Enable the button processing}\par
00020 \par
00021     dbnc: bool          {\cf20 # Flag that indicates that debouncer is active}\par
00022     dzero: bool         {\cf20 # Flag for double zero}\par
00023     nkey: bool          {\cf20 # Flag that indicates that a key was pressed}\par
00024     tb_dbnce: Time_base {\cf20 # Periocic time base used to implement the key debouncer}\par
00025 \par
00026     {\cf17 def }__init__(self, gpio: int, dbnc_time: int, en: bool):\par
00027         {\cf22 """}\par
00028 {\cf22         Constructor for Button.}\par
00029 {\cf22 }\par
00030 {\cf22         Parameters:}\par
00031 {\cf22         - ``gpio`` The gpio number for the button.}\par
00032 {\cf22         - ``dbnc_time`` Time in us for the debouncer.}\par
00033 {\cf22         - ``en`` Enable button processing.}\par
00034 {\cf22         """}\par
00035         {\cf20 # Initialize the button variables}\par
00036         self.enen = en\par
00037         self.dbncdbnc = {\cf17 False}\par
00038         self.dzerodzero = {\cf17 False}\par
00039         self.nkeynkey = {\cf17 False}\par
00040 \par
00041         self.gpioPingpioPin = Pin(gpio, Pin.IN, Pin.PULL_UP)\par
00042         self.tb_dbncetb_dbnce = Time_base(dbnc_time, {\cf17 False})\par
00043 \par
00044     {\cf17 def }set_zflag(self):\par
00045         {\cf22 """}\par
00046 {\cf22         Set the double zero flag.}\par
00047 {\cf22         """}\par
00048         self.dzerodzero = {\cf17 True}\par
00049 \par
00050     {\cf17 def }clear_zflag(self):\par
00051         {\cf22 """}\par
00052 {\cf22         Clear the double zero flag.}\par
00053 {\cf22         """}\par
00054         self.dzerodzero = {\cf17 False}\par
00055 \par
00056     {\cf17 def }is_2nd_zero(self) -> bool:\par
00057         {\cf22 """}\par
00058 {\cf22         This method returns true if a first zero was detected on keypad columns}\par
00059 {\cf22         """}\par
00060         {\cf19 return} self.dzerodzero\par
00061 \par
00062 \par
00063 \par
00064     \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_led.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_led.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_led.py}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b gpio_led.Led}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b gpio_led}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio_led.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_led.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/gpio_led.py}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: gpio_led.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class to process a led.}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} machine {\cf17 import} Pin\par
00010 \par
00011 {\cf17 class }Led:\par
00012     {\cf22 """}\par
00013 {\cf22     Class to process a led.}\par
00014 {\cf22     """}\par
00015     gpioPin: Pin       {\cf20 # The gpio for the led}\par
00016     on: bool           {\cf20 # Its principal aim is to make a toggle}\par
00017 \par
00018     {\cf17 def }__init__(self, gpio: int, on: bool):\par
00019         {\cf22 """}\par
00020 {\cf22         Constructor for Led.}\par
00021 {\cf22 }\par
00022 {\cf22         Parameters:}\par
00023 {\cf22         - ``gpio`` The gpio number for the led.}\par
00024 {\cf22         - ``state`` True to turn on the led, False to turn off the led.}\par
00025 {\cf22         """}\par
00026         {\cf20 # Initialize the led variables}\par
00027         self.onon = on\par
00028         self.gpioPingpioPin = Pin(gpio, Pin.OUT)\par
00029         self.gpioPingpioPin.value(self.onon)\par
00030 \par
00031     {\cf17 def }set(self):\par
00032         {\cf22 """}\par
00033 {\cf22         Turn on the led.}\par
00034 {\cf22         """}\par
00035         self.gpioPingpioPin.high()\par
00036         self.onon = {\cf17 True}\par
00037 \par
00038     {\cf17 def }clear(self):\par
00039         {\cf22 """}\par
00040 {\cf22         Turn off the led.}\par
00041 {\cf22         """}\par
00042         self.gpioPingpioPin.low()\par
00043         self.onon = {\cf17 False}\par
00044 \par
00045     {\cf17 def }toggle(self):\par
00046         {\cf22 """}\par
00047 {\cf22         Toggle the led.}\par
00048 {\cf22         """}\par
00049         self.gpioPingpioPin.value({\cf19 not} self.onon)\par
00050         self.onon = {\cf19 not} self.onon\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/keypad_polling.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/keypad_polling.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/keypad_polling.py}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b keypad_polling.KeyPad}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b keypad_polling}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keypad_polling.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/keypad_polling.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/keypad_polling.py}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: keypad_polling.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class to process the keypad.}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} time_base {\cf17 import} Time_base\par
00010 {\cf17 from} machine {\cf17 import} Pin\par
00011 \par
00012 {\cf17 class }KeyPad:\par
00013     cols: int           {\cf20 # store the columns state}\par
00014     cnt: int            {\cf20 # counter to generate row sequence}\par
00015     seq: int            {\cf20 # store the current sequence state}\par
00016     ckey: int           {\cf20 # captured key with position coding}\par
00017     dkey: int           {\cf20 # captured key with decimal coding}\par
00018     rlsb: int           {\cf20 # The rows LSB position for keypad rows, the four gpios for rows must be consecutives starting in position rlsb}\par
00019     clsb: int           {\cf20 # The cols LSB position for keypad cols, the four gpios for cols must be consecutives starting in position clsb}\par
00020     en: bool            {\cf20 # Enable keypad processing}\par
00021     dzero: bool         {\cf20 # Flag for double zero}\par
00022     nkey: bool          {\cf20 # Flag that indicates that a key was pressed}\par
00023     dbnc: bool          {\cf20 # Flag that indicates that debouncer is active      }\par
00024     tb_seq: Time_base           {\cf20 # Periodic time base used to generate row sequence}\par
00025     tb_dbnce: Time_base         {\cf20 # Periocic time base used to implement the key debouncer}\par
00026     history = []     {\cf20 # The last 10 pressed keys}\par
00027     gpioC = []        {\cf20 # The four gpios for cols}\par
00028     gpioR = []        {\cf20 # The four gpios for rows}\par
00029 \par
00030     {\cf17 def }__init__(self, rlsb: int, clsb: int, dbnc_time: int, en: bool):\par
00031         {\cf22 """}\par
00032 {\cf22         Constructor for KeyPad.}\par
00033 {\cf22 }\par
00034 {\cf22         Parameters:}\par
00035 {\cf22         - ``rlsb`` The rows LSB position for keypad rows, the four gpios for rows must be consecutives.}\par
00036 {\cf22         - ``clsb`` The cols LSB position for keypad cols, the four gpios for cols must be consecutives.}\par
00037 {\cf22         - ``dbnc_time`` Time in us for the debouncer.}\par
00038 {\cf22         - ``en`` Enable keypad processing.}\par
00039 {\cf22         """}\par
00040         {\cf20 # Initialize history buffer}\par
00041         {\cf19 for} i {\cf19 in} range(10):\par
00042             self.history.append(int(0xff))\par
00043         {\cf20 # Initialize the keypad variables}\par
00044         self.colscols = 0\par
00045         self.cntcnt = 0x0\par
00046         self.seqseq = 0x8\par
00047         self.ckeyckey = 0\par
00048         self.dkeydkey = 0x1F\par
00049         self.rlsbrlsb = rlsb\par
00050         self.clsbclsb = clsb\par
00051         self.enen = en\par
00052         self.dzerodzero = {\cf17 False}\par
00053         self.nkeynkey = {\cf17 False}\par
00054         self.dbncdbnc = {\cf17 False}\par
00055         {\cf20 # Initialize time bases}\par
00056         self.tb_seqtb_seq = Time_base(2000, {\cf17 True})\par
00057         self.tb_dbncetb_dbnce = Time_base(dbnc_time, {\cf17 False})\par
00058 \par
00059         {\cf20 # Initialize the gpios}\par
00060         {\cf19 for} i {\cf19 in} range(4):\par
00061             self.gpioR.append(Pin(self.rlsbrlsb + i, Pin.OUT))\par
00062             self.gpioC.append(Pin(self.clsbclsb + i, Pin.IN, Pin.PULL_UP))\par
00063 \par
00064 \par
00065     {\cf17 def }captureKey(self):\par
00066         {\cf22 """}\par
00067 {\cf22         Capture the key pressed.}\par
00068 {\cf22         Before this metod, it must be called the captureCols method.}\par
00069 {\cf22         """}\par
00070         {\cf20 # Key processing}\par
00071         self.ckeyckey = (self.colscols << 4) | self.seqseq\par
00072         self.decode()\par
00073         {\cf20 # Store the key in the history buffer}\par
00074         {\cf19 for} i {\cf19 in} range(9):\par
00075             self.history[9 - i] = self.history[9 - i - 1]\par
00076         self.history[0] = self.dkeydkey\par
00077         {\cf20 # Set the new key flag}\par
00078         self.nkeynkey = {\cf17 True}\par
00079 \par
00080     {\cf17 def }captureCols(self):\par
00081         {\cf22 """}\par
00082 {\cf22         Capture the columns state.}\par
00083 {\cf22         """}\par
00084         self.colscols = 0\par
00085         {\cf19 for} i {\cf19 in} range(4):\par
00086             self.colscols |= (self.gpioC[i].value() << i)\par
00087     \par
00088     {\cf17 def }decode(self):\par
00089         {\cf22 """}\par
00090 {\cf22         Decode the key pressed.}\par
00091 {\cf22         """}\par
00092         {\cf19 if} self.ckeyckey == 0xe8:\par
00093             self.dkeydkey = 0x01\par
00094         {\cf19 elif} self.ckeyckey == 0xd8:\par
00095             self.dkeydkey = 0x02\par
00096         {\cf19 elif} self.ckeyckey == 0xb8:\par
00097             self.dkeydkey = 0x03\par
00098         {\cf19 elif} self.ckeyckey == 0x78:\par
00099             self.dkeydkey = 0x0A\par
00100         {\cf19 elif} self.ckeyckey == 0xe4:\par
00101             self.dkeydkey = 0x04\par
00102         {\cf19 elif} self.ckeyckey ==0xd4:\par
00103             self.dkeydkey = 0x05\par
00104         {\cf19 elif} self.ckeyckey == 0xb4:\par
00105             self.dkeydkey = 0x06\par
00106         {\cf19 elif} self.ckeyckey == 0x74:\par
00107             self.dkeydkey = 0x0B\par
00108         {\cf19 elif} self.ckeyckey == 0xe2:\par
00109             self.dkeydkey = 0x07\par
00110         {\cf19 elif} self.ckeyckey == 0xd2:\par
00111             self.dkeydkey = 0x08\par
00112         {\cf19 elif} self.ckeyckey == 0xb2:\par
00113             self.dkeydkey = 0x09\par
00114         {\cf19 elif} self.ckeyckey == 0x72:\par
00115             self.dkeydkey = 0x0C\par
00116         {\cf19 elif} self.ckeyckey == 0xe1:\par
00117             self.dkeydkey = 0x0E\par
00118         {\cf19 elif} self.ckeyckey == 0xd1:\par
00119             self.dkeydkey = 0x00\par
00120         {\cf19 elif} self.ckeyckey == 0xb1:\par
00121             self.dkeydkey = 0x0F\par
00122         {\cf19 elif} self.ckeyckey == 0x71:\par
00123             self.dkeydkey = 0x0D\par
00124 \par
00125     {\cf17 def }gen_seq(self):\par
00126         {\cf22 """}\par
00127 {\cf22         Generate the row sequence.}\par
00128 {\cf22         """}\par
00129         {\cf19 if} {\cf19 not} self.enen:\par
00130             {\cf19 return}\par
00131         \par
00132         self.cntcnt = (self.cntcnt + 1)%4\par
00133         self.seqseq = (1 << self.cntcnt) & 0x0000000F\par
00134 \par
00135         {\cf19 for} i {\cf19 in} range(4):\par
00136             self.gpioR[i].value((self.seqseq >> i) & 0x1)\par
00137 \par
00138 \par
00139     {\cf17 def }get_key(self) -> int:\par
00140         {\cf22 """}\par
00141 {\cf22         Get the last key pressed.}\par
00142 {\cf22         """}\par
00143         {\cf19 return} self.dkeydkey\par
00144     \par
00145     {\cf17 def }set_zflag(self):\par
00146         {\cf22 """}\par
00147 {\cf22         Set the double zero flag.}\par
00148 {\cf22         """}\par
00149         self.dzerodzero = {\cf17 True}\par
00150 \par
00151     {\cf17 def }clear_zflag(self):\par
00152         {\cf22 """}\par
00153 {\cf22         Clear the double zero flag.}\par
00154 {\cf22         """}\par
00155         self.dzerodzero = {\cf17 False}\par
00156 \par
00157     {\cf17 def }is_2nd_zero(self) -> bool:\par
00158         {\cf22 """}\par
00159 {\cf22         This method returns true if a first zero was detected on keypad columns}\par
00160 {\cf22         """}\par
00161         {\cf19 return} self.dzerodzero\par
00162             \par
00163 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/polling_microPython.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/polling_microPython.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/polling_microPython.py}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.Time_base}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.Button}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.KeyPad}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.Signal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.DAC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b polling_microPython.Led}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b polling_microPython}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.checkNumer} (int number)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.checkLetter} (int letter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.checkFreq} (int freq)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.checkAmp} (int amp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.checkOffset} (int offset)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.S_TO_US} = 1000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b polling_microPython.US_TO_S} = 0.000001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.SAMPLE} = 70\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.RESOLUTION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.DAC_RANGE} = 10120\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.DAC_BIAS} = -60\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.my_signal} = {\b Signal}(10, 1000, 500, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.my_dac} = {\b DAC}(10, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.my_led} = {\b Led}(18, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.my_keypad} = {\b KeyPad}(2, 6, 100000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.my_button} = {\b Button}(0, 100000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.tb_print} = {\b Time_base}(1000000, True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.in_state} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.key_cnt} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b polling_microPython.param} = 0x0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.dbnc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b polling_microPython.boolButton} = bool(my_button.gpioPin.value())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.nkey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b polling_microPython.cnt}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
polling_microPython.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/polling_microPython.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/polling_microPython.py}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``Author``:  MST_CDA}\par
00003 {\cf22  - ``Date``:  2024-04-14}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``file``: main.py}\par
00006 {\cf22  }\par
00007 {\cf22 This proyect implements an digital signal generator.}\par
00008 {\cf22 }\par
00009 {\cf22 In this practice, we will develop a Digital Signal Generator (DSG) device. }\par
00010 {\cf22 The DSG device generates 4 different waveforms: sine, triangular, sawtooth, and square. }\par
00011 {\cf22 The user can select the type of waveform generated by the DSG using a push button. }\par
00012 {\cf22 Each time the button is pressed, the system switches from one waveform to the next sequentially. }\par
00013 {\cf22 The amplitude, DC level (offset), and signal frequency are entered using a 4x4 matrix keypad. }\par
00014 {\cf22 To enter the amplitude, the user will press the A key followed by the desired voltage value in }\par
00015 {\cf22 millivolts and the D key to finalize. Similarly, to enter the DC level, the user will press }\par
00016 {\cf22 the B key followed by the desired DC voltage value in millivolts and the D key to finalize. }\par
00017 {\cf22 Finally, to enter the frequency, the user must press the C key followed by the frequency }\par
00018 {\cf22 value in Hertz and the D key to finalize. The current values of Amplitude, DC Level, and }\par
00019 {\cf22 Frequency along with the current waveform will be printed every second via the serial or USB }\par
00020 {\cf22 interface to a terminal tool. }\par
00021 {\cf22 }\par
00022 {\cf22 The Amplitude should be adjustable between 100mV and 2500mV, the DC Level between 50mV and 1250mV. }\par
00023 {\cf22 The frequency should be adjustable between 1 Hz and 12000000 Hz. }\par
00024 {\cf22 Therefore, the max range for the value of the signal is: -2450mV to 3750mV.}\par
00025 {\cf22 }\par
00026 {\cf22 By default, the DSG device starts generating a sinusoidal signal with an amplitude of 1000 mV, }\par
00027 {\cf22 DC Level of 500mV, and frequency of 10Hz. The generated signal and its characteristics }\par
00028 {\cf22 should be able to be verified by a measuring instrument, multimeter, or oscilloscope.}\par
00029 {\cf22 }\par
00030 {\cf22    The DSG device should be implemented using the following hardware components:}\par
00031 {\cf22    - RPPS (Raspberry Pi Pico System) board.}\par
00032 {\cf22    - 4x4 matrix keypad.}\par
00033 {\cf22    - Digital-to-Analog Converter (DAC0808).}\par
00034 {\cf22    - Operational Amplifier (LM358).}\par
00035 {\cf22    - LED}\par
00036 {\cf22 }\par
00037 {\cf22 NOTE: Using Pin.value(), it must take into account that: }\par
00038 {\cf22     - If is given a parameter and it is Pin.OUT: it sets the pin to what is given.}\par
00039 {\cf22     - If no parameter is given and it is Pin.IN: it returns the current value of the pin.}\par
00040 {\cf22     To other cases, its behavior is not defined.}\par
00041 {\cf22 }\par
00042 {\cf22 """}\par
00043 \par
00044 {\cf20 # Some auxiliary functions}\par
00045 {\cf17 def }checkNumer(number: int) -> bool:\par
00046     {\cf19 return} (number >= 0 {\cf19 and} number <= 9)\par
00047 \par
00048 {\cf17 def }checkLetter(letter: int) -> bool:\par
00049     {\cf19 return} (letter >= 0x0A {\cf19 and} letter <= 0x0C)\par
00050 \par
00051 {\cf17 def }checkFreq(freq: int) -> bool:\par
00052     {\cf19 return} (freq >= 1 {\cf19 and} freq <= 12000000)\par
00053 \par
00054 {\cf17 def }checkAmp(amp: int) -> bool:\par
00055     {\cf19 return} (amp >= 100 {\cf19 and} amp <= 2500)\par
00056 \par
00057 {\cf17 def }checkOffset(offset: int) -> bool:\par
00058     {\cf19 return} (offset >= 50 {\cf19 and} offset <= 1250)\par
00059 \par
00060 {\cf20 # ----------------------------------------------------------------------------}\par
00061 {\cf20 # ----------------------------- TIME BASE ------------------------------------}\par
00062 {\cf20 # ----------------------------------------------------------------------------}\par
00063 \par
00064 {\cf17 from} utime {\cf17 import} ticks_us\par
00065 \par
00066 {\cf17 class }Time_base:\par
00067     {\cf22 """}\par
00068 {\cf22     Class for time_base.}\par
00069 {\cf22     It is the key for the polling strategy.}\par
00070 {\cf22     """}\par
00071 \par
00072     next: int\par
00073     delta: int\par
00074     en: bool\par
00075 \par
00076     {\cf17 def }__init__(self, us: int, en: bool):\par
00077         {\cf22 """}\par
00078 {\cf22         Constructor for time_base.}\par
00079 {\cf22 }\par
00080 {\cf22         Parameters:}\par
00081 {\cf22         - ``us`` Time in microseconds.}\par
00082 {\cf22         - ``en`` Enable the timer.}\par
00083 {\cf22         """}\par
00084         self.nextnext = ticks_us() + us\par
00085         self.deltadelta = us\par
00086         self.enen = en\par
00087     \par
00088     {\cf17 def }check(self):\par
00089         {\cf22 """}\par
00090 {\cf22         Check if the timer has expired.}\par
00091 {\cf22 }\par
00092 {\cf22         Returns:}\par
00093 {\cf22         - ``bool`` True if the timer has expired.}\par
00094 {\cf22         """}\par
00095         {\cf19 return} (self.enen {\cf19 and} ticks_us() >= self.nextnext)\par
00096     \par
00097     {\cf17 def }update(self):\par
00098         {\cf22 """}\par
00099 {\cf22         Update the next time in microseconds.}\par
00100 {\cf22         """}\par
00101         self.nextnext = ticks_us() + self.deltadelta\par
00102 \par
00103     {\cf17 def }set_next(self):\par
00104         {\cf22 """}\par
00105 {\cf22         Set the next time in microseconds.}\par
00106 {\cf22         """}\par
00107         self.nextnext = self.nextnext + self.deltadelta\par
00108 \par
00109     {\cf17 def }enable(self):\par
00110         {\cf22 """}\par
00111 {\cf22         Enable the timer.}\par
00112 {\cf22         """}\par
00113         self.enen = {\cf17 True}\par
00114 \par
00115     {\cf17 def }disable(self):\par
00116         {\cf22 """}\par
00117 {\cf22         Disable the timer.}\par
00118 {\cf22         """}\par
00119         self.enen = {\cf17 False}\par
00120 \par
00121     {\cf17 def }set_delta(self, us: int):\par
00122         {\cf22 """}\par
00123 {\cf22         Set the time in microseconds.}\par
00124 {\cf22 }\par
00125 {\cf22         Parameters:}\par
00126 {\cf22         - ``us`` Time in microseconds.}\par
00127 {\cf22         """}\par
00128         self.deltadelta = us\par
00129 \par
00130 {\cf20 # ----------------------------------------------------------------------------}\par
00131 {\cf20 # ----------------------------- BUTTON ---------------------------------------}\par
00132 {\cf20 # ----------------------------------------------------------------------------}\par
00133 \par
00134 {\cf17 from} machine {\cf17 import} Pin\par
00135 \par
00136 {\cf17 class }Button:\par
00137     {\cf22 """}\par
00138 {\cf22     Class to process the button.}\par
00139 {\cf22 }\par
00140 {\cf22     It is used as a base class for the keypad -> Herency}\par
00141 {\cf22     """}\par
00142     gpioPin: Pin        {\cf20 # The gpio for the button}\par
00143     en: bool            {\cf20 # Enable the button processing}\par
00144 \par
00145     dbnc: bool          {\cf20 # Flag that indicates that debouncer is active}\par
00146     dzero: bool         {\cf20 # Flag for double zero}\par
00147     nkey: bool          {\cf20 # Flag that indicates that a key was pressed}\par
00148     tb_dbnce: Time_base {\cf20 # Periocic time base used to implement the key debouncer}\par
00149 \par
00150     {\cf17 def }__init__(self, gpio: int, dbnc_time: int, en: bool):\par
00151         {\cf22 """}\par
00152 {\cf22         Constructor for Button.}\par
00153 {\cf22 }\par
00154 {\cf22         Parameters:}\par
00155 {\cf22         - ``gpio`` The gpio number for the button.}\par
00156 {\cf22         - ``dbnc_time`` Time in us for the debouncer.}\par
00157 {\cf22         - ``en`` Enable button processing.}\par
00158 {\cf22         """}\par
00159         {\cf20 # Initialize the button variables}\par
00160         self.enen = en\par
00161         self.dbncdbnc = {\cf17 False}\par
00162         self.dzerodzero = {\cf17 False}\par
00163         self.nkeynkey = {\cf17 False}\par
00164 \par
00165         self.gpioPingpioPin = Pin(gpio, Pin.IN, Pin.PULL_DOWN)\par
00166         self.tb_dbncetb_dbnce = Time_base(dbnc_time, {\cf17 False})\par
00167 \par
00168     {\cf17 def }set_zflag(self):\par
00169         {\cf22 """}\par
00170 {\cf22         Set the double zero flag.}\par
00171 {\cf22         """}\par
00172         self.dzerodzero = {\cf17 True}\par
00173 \par
00174     {\cf17 def }clear_zflag(self):\par
00175         {\cf22 """}\par
00176 {\cf22         Clear the double zero flag.}\par
00177 {\cf22         """}\par
00178         self.dzerodzero = {\cf17 False}\par
00179 \par
00180     {\cf17 def }is_2nd_zero(self) -> bool:\par
00181         {\cf22 """}\par
00182 {\cf22         This method returns true if a first zero was detected on keypad columns}\par
00183 {\cf22         """}\par
00184         {\cf19 return} self.dzerodzero\par
00185 \par
00186 \par
00187 \par
00188 {\cf20 # ----------------------------------------------------------------------------}\par
00189 {\cf20 # ----------------------------- KEYPAD ---------------------------------------}\par
00190 {\cf20 # ----------------------------------------------------------------------------}\par
00191 \par
00192 \par
00193 {\cf17 class }KeyPad:\par
00194     cols: int           {\cf20 # store the columns state}\par
00195     cnt: int            {\cf20 # counter to generate row sequence}\par
00196     seq: int            {\cf20 # store the current sequence state}\par
00197     ckey: int           {\cf20 # captured key with position coding}\par
00198     dkey: int           {\cf20 # captured key with decimal coding}\par
00199     rlsb: int           {\cf20 # The rows LSB position for keypad rows, the four gpios for rows must be consecutives starting in position rlsb}\par
00200     clsb: int           {\cf20 # The cols LSB position for keypad cols, the four gpios for cols must be consecutives starting in position clsb}\par
00201     en: bool            {\cf20 # Enable keypad processing}\par
00202     dzero: bool         {\cf20 # Flag for double zero}\par
00203     nkey: bool          {\cf20 # Flag that indicates that a key was pressed}\par
00204     dbnc: bool          {\cf20 # Flag that indicates that debouncer is active      }\par
00205     tb_seq: Time_base           {\cf20 # Periodic time base used to generate row sequence}\par
00206     tb_dbnce: Time_base         {\cf20 # Periocic time base used to implement the key debouncer}\par
00207     history = []     {\cf20 # The last 10 pressed keys}\par
00208     gpioC = []        {\cf20 # The four gpios for cols}\par
00209     gpioR = []        {\cf20 # The four gpios for rows}\par
00210 \par
00211     {\cf17 def }__init__(self, rlsb: int, clsb: int, dbnc_time: int, en: bool):\par
00212         {\cf22 """}\par
00213 {\cf22         Constructor for KeyPad.}\par
00214 {\cf22 }\par
00215 {\cf22         Parameters:}\par
00216 {\cf22         - ``rlsb`` The rows LSB position for keypad rows, the four gpios for rows must be consecutives.}\par
00217 {\cf22         - ``clsb`` The cols LSB position for keypad cols, the four gpios for cols must be consecutives.}\par
00218 {\cf22         - ``dbnc_time`` Time in us for the debouncer.}\par
00219 {\cf22         - ``en`` Enable keypad processing.}\par
00220 {\cf22         """}\par
00221         {\cf20 # Initialize history buffer}\par
00222         {\cf19 for} i {\cf19 in} range(10):\par
00223             self.history.append(int(0xff))\par
00224         {\cf20 # Initialize the keypad variables}\par
00225         self.colscols = 0\par
00226         self.cntcnt = 0x0\par
00227         self.seqseq = 0x8\par
00228         self.ckeyckey = 0\par
00229         self.dkeydkey = 0x1F\par
00230         self.rlsbrlsb = rlsb\par
00231         self.clsbclsb = clsb\par
00232         self.enen = en\par
00233         self.dzerodzero = {\cf17 False}\par
00234         self.nkeynkey = {\cf17 False}\par
00235         self.dbncdbnc = {\cf17 False}\par
00236         {\cf20 # Initialize time bases}\par
00237         self.tb_seqtb_seq = Time_base(2000, {\cf17 True})\par
00238         self.tb_dbncetb_dbnce = Time_base(dbnc_time, {\cf17 False})\par
00239 \par
00240         {\cf20 # Initialize the gpios}\par
00241         {\cf19 for} i {\cf19 in} range(4):\par
00242             self.gpioR.append(Pin(self.rlsbrlsb + i, Pin.OUT))\par
00243             self.gpioC.append(Pin(self.clsbclsb + i, Pin.IN, Pin.PULL_UP))\par
00244 \par
00245 \par
00246     {\cf17 def }captureKey(self):\par
00247         {\cf22 """}\par
00248 {\cf22         Capture the key pressed.}\par
00249 {\cf22         Before this metod, it must be called the captureCols method.}\par
00250 {\cf22         """}\par
00251         {\cf20 # Key processing}\par
00252         self.ckeyckey = (self.colscols << 4) | self.seqseq\par
00253         self.decode()\par
00254         {\cf20 # Store the key in the history buffer}\par
00255         {\cf19 for} i {\cf19 in} range(9):\par
00256             self.history[9 - i] = self.history[9 - i - 1]\par
00257         self.history[0] = self.dkeydkey\par
00258         {\cf20 # Set the new key flag}\par
00259         self.nkeynkey = {\cf17 True}\par
00260 \par
00261     {\cf17 def }captureCols(self):\par
00262         {\cf22 """}\par
00263 {\cf22         Capture the columns state.}\par
00264 {\cf22         """}\par
00265         self.colscols = 0\par
00266         {\cf19 for} i {\cf19 in} range(4):\par
00267             self.colscols |= (self.gpioC[i].value() << i)\par
00268     \par
00269     {\cf17 def }decode(self):\par
00270         {\cf22 """}\par
00271 {\cf22         Decode the key pressed.}\par
00272 {\cf22         """}\par
00273         {\cf19 if} self.ckeyckey == 0x77:\par
00274             self.dkeydkey = 0x01\par
00275         {\cf19 elif} self.ckeyckey == 0xb7:\par
00276             self.dkeydkey = 0x02\par
00277         {\cf19 elif} self.ckeyckey == 0xd7:\par
00278             self.dkeydkey = 0x03\par
00279         {\cf19 elif} self.ckeyckey == 0xe7:\par
00280             self.dkeydkey = 0x0A\par
00281         {\cf19 elif} self.ckeyckey == 0x7b:\par
00282             self.dkeydkey = 0x04\par
00283         {\cf19 elif} self.ckeyckey ==0xbb:\par
00284             self.dkeydkey = 0x05\par
00285         {\cf19 elif} self.ckeyckey == 0xdb:\par
00286             self.dkeydkey = 0x06\par
00287         {\cf19 elif} self.ckeyckey == 0xeb:\par
00288             self.dkeydkey = 0x0B\par
00289         {\cf19 elif} self.ckeyckey == 0x7d:\par
00290             self.dkeydkey = 0x07\par
00291         {\cf19 elif} self.ckeyckey == 0xbd:\par
00292             self.dkeydkey = 0x08\par
00293         {\cf19 elif} self.ckeyckey == 0xdd:\par
00294             self.dkeydkey = 0x09\par
00295         {\cf19 elif} self.ckeyckey == 0xed:\par
00296             self.dkeydkey = 0x0C\par
00297         {\cf19 elif} self.ckeyckey == 0x7e:\par
00298             self.dkeydkey = 0x0E\par
00299         {\cf19 elif} self.ckeyckey == 0xbe:\par
00300             self.dkeydkey = 0x00\par
00301         {\cf19 elif} self.ckeyckey == 0xde:\par
00302             self.dkeydkey = 0x0F\par
00303         {\cf19 elif} self.ckeyckey == 0xee:\par
00304             self.dkeydkey = 0x0D\par
00305 \par
00306     {\cf17 def }gen_seq(self):\par
00307         {\cf22 """}\par
00308 {\cf22         Generate the row sequence.}\par
00309 {\cf22         """}\par
00310         {\cf19 if} {\cf19 not} self.enen:\par
00311             {\cf19 return}\par
00312         \par
00313         self.cntcnt = (self.cntcnt + 1)%4\par
00314         {\cf20 # self.seq = (1 << self.cnt) & 0x0000000F}\par
00315         {\cf20 # Reverse the sequence}\par
00316         {\cf19 if} self.cntcnt == 0x0:\par
00317             self.seqseq = 0b1110\par
00318         {\cf19 elif} self.cntcnt == 0x1:\par
00319             self.seqseq = 0b1101\par
00320         {\cf19 elif} self.cntcnt == 0x2:\par
00321             self.seqseq = 0b1011\par
00322         {\cf19 elif} self.cntcnt == 0x3:\par
00323             self.seqseq = 0b0111\par
00324 \par
00325         {\cf19 for} i {\cf19 in} range(4):\par
00326             self.gpioR[i].value((self.seqseq >> i) & 0x1)\par
00327 \par
00328 \par
00329     {\cf17 def }get_key(self) -> int:\par
00330         {\cf22 """}\par
00331 {\cf22         Get the last key pressed.}\par
00332 {\cf22         """}\par
00333         {\cf19 return} self.dkeydkey\par
00334     \par
00335     {\cf17 def }set_zflag(self):\par
00336         {\cf22 """}\par
00337 {\cf22         Set the double zero flag.}\par
00338 {\cf22         """}\par
00339         self.dzerodzero = {\cf17 True}\par
00340 \par
00341     {\cf17 def }clear_zflag(self):\par
00342         {\cf22 """}\par
00343 {\cf22         Clear the double zero flag.}\par
00344 {\cf22         """}\par
00345         self.dzerodzero = {\cf17 False}\par
00346 \par
00347     {\cf17 def }is_2nd_zero(self) -> bool:\par
00348         {\cf22 """}\par
00349 {\cf22         This method returns true if a first zero was detected on keypad columns}\par
00350 {\cf22         """}\par
00351         {\cf19 return} self.dzerodzero\par
00352 \par
00353 {\cf20 # ----------------------------------------------------------------------------}\par
00354 {\cf20 # ----------------------------- SIGNAL GENERATOR -----------------------------}\par
00355 {\cf20 # ----------------------------------------------------------------------------}\par
00356 \par
00357 \par
00358 {\cf17 from} math {\cf17 import} sin, pi\par
00359 {\cf17 from} utime {\cf17 import} ticks_us\par
00360 \par
00361 S_TO_US = 1000000\par
00362 US_TO_S = 0.000001\par
00363 SAMPLE = 70\par
00364 \par
00365 {\cf17 class }Signal:\par
00366     ss: int             {\cf20 # Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square}\par
00367     en: bool            {\cf20 # Enable the signal generator}\par
00368     freq: int           {\cf20 # Frequency in Hz}\par
00369     amp: int            {\cf20 # Amplitude in mV}\par
00370     offset: int         {\cf20 # Offset in mV}\par
00371     value: int          {\cf20 # Current value in mV}\par
00372     arrayV = []         {\cf20 # Array of values for the signal}\par
00373     cnt: int            {\cf20 # Counter for the signal generator: 0 to SAMPLE - 1}\par
00374     tb_gen: Time_base   {\cf20 # Time base for the signal generator}\par
00375 \par
00376     {\cf17 def }__init__(self, freq: int, amp: int, offset: int, en: bool):\par
00377         {\cf22 """}\par
00378 {\cf22         Constructor for signal_generator.}\par
00379 {\cf22 }\par
00380 {\cf22         Parameters:}\par
00381 {\cf22         - ``freq`` Frequency in Hz.}\par
00382 {\cf22         - ``amp`` Amplitude in mV.}\par
00383 {\cf22         - ``offset`` Offset in mV.}\par
00384 {\cf22         - ``en`` Enable the signal generator.}\par
00385 {\cf22         """}\par
00386         self.ssss = 0\par
00387         self.enen = en\par
00388         self.freqfreq = freq\par
00389         self.ampamp = amp\par
00390         self.offsetoffset = offset\par
00391         self.valuevalue = 0\par
00392         self.cntcnt = 0\par
00393         self.tb_gentb_gen = Time_base(S_TO_US // (SAMPLE*freq), {\cf17 True})\par
00394         {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00395             self.arrayV.append(0)\par
00396 \par
00397     {\cf17 def }gen_sin(self, t: int):\par
00398         {\cf22 """}\par
00399 {\cf22         Generate a sinusoidal signal.}\par
00400 {\cf22         """}\par
00401         self.valuevalue = int(self.offsetoffset + self.ampamp*sin((2*pi*t)/SAMPLE))\par
00402 \par
00403     {\cf17 def }gen_tri(self, t: int):\par
00404         {\cf22 """}\par
00405 {\cf22         Generate a triangular signal.}\par
00406 {\cf22         """}\par
00407         {\cf19 if} (t <= SAMPLE/2):\par
00408             self.valuevalue = int(self.offsetoffset + (4*self.ampamp*t)/SAMPLE - self.ampamp)\par
00409     \par
00410         {\cf19 else}:\par
00411             self.valuevalue = int(self.offsetoffset - (4*self.ampamp*t)/SAMPLE + 3*self.ampamp)\par
00412 \par
00413     {\cf17 def }gen_saw(self, t: int):\par
00414         {\cf22 """}\par
00415 {\cf22         Generate a sawtooth signal.}\par
00416 {\cf22         """}\par
00417         self.valuevalue = int(self.offsetoffset + (2*self.ampamp*t)/SAMPLE - self.ampamp)\par
00418 \par
00419     {\cf17 def }gen_sqr(self, t: int):\par
00420         {\cf22 """}\par
00421 {\cf22         Generate a square signal.}\par
00422 {\cf22         """}\par
00423         {\cf19 if} (t <= SAMPLE/2):\par
00424             self.valuevalue = int(self.offsetoffset + self.ampamp)\par
00425     \par
00426         {\cf19 else}:\par
00427             self.valuevalue = int(self.offsetoffset - self.ampamp)\par
00428 \par
00429     {\cf17 def }calculate(self):\par
00430         {\cf22 """}\par
00431 {\cf22         Update the value of the signal generator according to the signal state.}\par
00432 {\cf22         """}\par
00433 \par
00434         {\cf19 if} {\cf19 not} self.enen:\par
00435             {\cf19 return}\par
00436 \par
00437         {\cf19 if} self.ssss == 0:\par
00438             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00439                 self.gen_sin(i + 1)\par
00440                 self.arrayV[i] = self.valuevalue {\cf20 # Offset of the DAC}\par
00441         {\cf19 elif} self.ssss == 1:\par
00442             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00443                 self.gen_tri(i + 1)\par
00444                 self.arrayV[i] = self.valuevalue {\cf20 # Offset of the DAC}\par
00445         {\cf19 elif} self.ssss == 2:\par
00446             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00447                 self.gen_saw(i + 1)\par
00448                 self.arrayV[i] = self.valuevalue {\cf20 # Offset of the DAC}\par
00449         {\cf19 elif} self.ssss == 3:\par
00450             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00451                 self.gen_sqr(i + 1)\par
00452                 self.arrayV[i] = self.valuevalue {\cf20 # Offset of the DAC}\par
00453         \par
00454 \par
00455     {\cf17 def }get_value(self) -> int:\par
00456         {\cf22 """}\par
00457 {\cf22         Get the current value of the signal generator.}\par
00458 {\cf22 }\par
00459 {\cf22         Returns:}\par
00460 {\cf22         - ``value`` Current value in mV.}\par
00461 {\cf22         """}\par
00462         {\cf19 return} self.valuevalue\par
00463 \par
00464     {\cf17 def }set_ss(self, ss: int):\par
00465         {\cf22 """}\par
00466 {\cf22         Set the signal state.}\par
00467 {\cf22 }\par
00468 {\cf22         Parameters:}\par
00469 {\cf22         - ``ss`` Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square}\par
00470 {\cf22         """}\par
00471         self.ssss = ss\par
00472 \par
00473     {\cf17 def }set_freq(self, freq: int):\par
00474         {\cf22 """}\par
00475 {\cf22         Set the frequency in Hz.}\par
00476 {\cf22 }\par
00477 {\cf22         Parameters:}\par
00478 {\cf22         - ``freq`` Frequency in Hz.}\par
00479 {\cf22         """}\par
00480         self.freqfreq = freq\par
00481         self.tb_gentb_gen.set_delta(S_TO_US // (SAMPLE*freq))\par
00482 \par
00483     {\cf17 def }set_amp(self, amp: int):\par
00484         {\cf22 """}\par
00485 {\cf22         Set the amplitude in mV.}\par
00486 {\cf22 }\par
00487 {\cf22         Parameters:}\par
00488 {\cf22         - ``amp`` Amplitude in mV.}\par
00489 {\cf22         """}\par
00490         self.ampamp = amp\par
00491 \par
00492     {\cf17 def }set_offset(self, offset: int):\par
00493         {\cf22 """}\par
00494 {\cf22         Set the offset in mV.}\par
00495 {\cf22 }\par
00496 {\cf22         Parameters:}\par
00497 {\cf22         - ``offset`` Offset in mV.}\par
00498 {\cf22         """}\par
00499         self.offsetoffset = offset\par
00500 \par
00501 {\cf20 # ----------------------------------------------------------------------------}\par
00502 {\cf20 # ----------------------------- DAC ------------------------------------------}\par
00503 {\cf20 # ----------------------------------------------------------------------------}\par
00504 \par
00505 RESOLUTION = 255        {\cf20 # 8 bits}\par
00506 DAC_RANGE = 10120        {\cf20 # 0 to 9.3V}\par
00507 DAC_BIAS = -60\par
00508 \par
00509 {\cf17 class }DAC:\par
00510     {\cf22 """}\par
00511 {\cf22     Class to impress the DAC (8bits).}\par
00512 {\cf22     """}\par
00513     en: bool                {\cf20 # Enable the DAC processing}\par
00514     gpioD = []   {\cf20 # The eight gpios for the DAC}\par
00515     lsb: int                {\cf20 # The LSB position for the DAC, the eight gpios must be consecutives.}\par
00516     digit_v: int            {\cf20 # The digit value for the DAC}\par
00517 \par
00518     {\cf17 def }__init__(self, lsb: int, en: bool):\par
00519         {\cf22 """}\par
00520 {\cf22         Constructor for DAC.}\par
00521 {\cf22 }\par
00522 {\cf22         Parameters:}\par
00523 {\cf22         - ``lsb`` The LSB position for the DAC, the eight gpios must be consecutives.}\par
00524 {\cf22         - ``en`` Enable DAC processing.}\par
00525 {\cf22         """}\par
00526         {\cf20 # Initialize the DAC variables}\par
00527         self.enen = en\par
00528         self.lsblsb = lsb\par
00529         {\cf20 # Initialize the DAC gpios}\par
00530         {\cf19 for} i {\cf19 in} range(8):\par
00531             self.gpioD.append(Pin(lsb + i, Pin.OUT)) \par
00532 \par
00533     {\cf17 def }set_dac(self, value: int):\par
00534         {\cf22 """}\par
00535 {\cf22         Set the DAC value.}\par
00536 {\cf22 }\par
00537 {\cf22         Parameters:}\par
00538 {\cf22         - ``value`` The value to be set in the DAC.}\par
00539 {\cf22         """}\par
00540         {\cf19 if} {\cf19 not} self.enen:\par
00541             {\cf19 return}\par
00542 \par
00543         self.digit_vdigit_v = (value + DAC_BIAS + 5000)*RESOLUTION//DAC_RANGE\par
00544         {\cf19 for} i {\cf19 in} range(8):\par
00545             self.gpioD[i].value(self.digit_vdigit_v % 2)\par
00546             self.digit_vdigit_v = self.digit_vdigit_v // 2\par
00547 \par
00548 \par
00549 {\cf20 # ----------------------------------------------------------------------------}\par
00550 {\cf20 # ----------------------------- LED ------------------------------------------}\par
00551 {\cf20 # ----------------------------------------------------------------------------}\par
00552 \par
00553 {\cf17 class }Led:\par
00554     {\cf22 """}\par
00555 {\cf22     Class to process a led.}\par
00556 {\cf22     """}\par
00557     gpioPin: Pin       {\cf20 # The gpio for the led}\par
00558     on: bool           {\cf20 # Its principal aim is to make a toggle}\par
00559 \par
00560     {\cf17 def }__init__(self, gpio: int, on: bool):\par
00561         {\cf22 """}\par
00562 {\cf22         Constructor for Led.}\par
00563 {\cf22 }\par
00564 {\cf22         Parameters:}\par
00565 {\cf22         - ``gpio`` The gpio number for the led.}\par
00566 {\cf22         - ``state`` True to turn on the led, False to turn off the led.}\par
00567 {\cf22         """}\par
00568         {\cf20 # Initialize the led variables}\par
00569         self.onon = on\par
00570         self.gpioPingpioPin = Pin(gpio, Pin.OUT)\par
00571         self.gpioPingpioPin.value(self.onon)\par
00572 \par
00573     {\cf17 def }set(self):\par
00574         {\cf22 """}\par
00575 {\cf22         Turn on the led.}\par
00576 {\cf22         """}\par
00577         self.gpioPingpioPin.high()\par
00578         self.onon = {\cf17 True}\par
00579 \par
00580     {\cf17 def }clear(self):\par
00581         {\cf22 """}\par
00582 {\cf22         Turn off the led.}\par
00583 {\cf22         """}\par
00584         self.gpioPingpioPin.low()\par
00585         self.onon = {\cf17 False}\par
00586 \par
00587     {\cf17 def }toggle(self):\par
00588         {\cf22 """}\par
00589 {\cf22         Toggle the led.}\par
00590 {\cf22         """}\par
00591         self.gpioPingpioPin.value({\cf19 not} self.onon)\par
00592         self.onon = {\cf19 not} self.onon\par
00593 \par
00594 \par
00595 {\cf20 # Import the modules}\par
00596 {\cf20 # from time_base import Time_base}\par
00597 {\cf20 # from gpio_button import Button}\par
00598 {\cf20 # from keypad_polling import KeyPad}\par
00599 {\cf20 # from signal_generator import Signal, SAMPLE}\par
00600 {\cf20 # from dac import DAC}\par
00601 {\cf20 # from gpio_led import Led}\par
00602 \par
00603 {\cf20 # Initialize the objects}\par
00604 my_signal = Signal(10, 1000, 500, {\cf17 True})\par
00605 my_signal.calculate()\par
00606 my_dac = DAC(10, {\cf17 True})\par
00607 my_led = Led(18, {\cf17 True})\par
00608 my_keypad = KeyPad(2, 6, 100000, {\cf17 True})\par
00609 my_button = Button(0, 100000, {\cf17 True})\par
00610 tb_print = Time_base(1000000, {\cf17 True})\par
00611 \par
00612 {\cf20 # Auxiliar variables}\par
00613 in_state: int = 0x0 {\cf20 # 0: Nothing, 1: Amp, 2: Offset, 3: Freq}\par
00614 key_cnt: int = 0x0\par
00615 param: int = 0x0\par
00616 \par
00617 {\cf20 # Main loop}\par
00618 {\cf19 while} {\cf17 True}:\par
00619     {\cf20 # Get the keypad columns}\par
00620     my_keypad.captureCols()\par
00621     {\cf20 # Process the keypad}\par
00622     {\cf19 if} ((my_keypad.cols != 0x0f) {\cf19 and} ({\cf19 not} my_keypad.dbnc)):\par
00623         my_keypad.tb_seq.disable()\par
00624         my_keypad.captureKey() {\cf20 # Capture the key}\par
00625         my_keypad.tb_dbnce.update()\par
00626         my_keypad.tb_dbnce.enable()\par
00627         my_keypad.set_zflag()\par
00628         my_keypad.dbnc = {\cf17 True}\par
00629     \par
00630     {\cf19 if} (my_keypad.tb_seq.check()):\par
00631         my_keypad.tb_seq.set_next()\par
00632         my_keypad.gen_seq()\par
00633 \par
00634     {\cf19 if} (my_keypad.tb_dbnce.check()):\par
00635         my_keypad.tb_dbnce.set_next()\par
00636         {\cf19 if} (my_keypad.is_2nd_zero()):\par
00637             {\cf19 if} (my_keypad.cols == 0x0f):\par
00638                 my_keypad.tb_seq.update()\par
00639                 my_keypad.tb_seq.enable()\par
00640                 my_keypad.tb_dbnce.disable()\par
00641                 my_keypad.dbnc = {\cf17 False}\par
00642             {\cf19 else}: \par
00643                 my_keypad.clear_zflag()\par
00644         {\cf19 else}:\par
00645             {\cf19 if} (my_keypad.cols == 0x0f):\par
00646                 my_keypad.set_zflag()\par
00647     \par
00648     {\cf20 # Process the button (low active)}\par
00649     boolButton: bool = bool(my_button.gpioPin.value())\par
00650     {\cf19 if} (boolButton {\cf19 and} ({\cf19 not} my_button.dbnc)):\par
00651         my_button.nkey = {\cf17 True} {\cf20 # A key was pressed}\par
00652         my_button.tb_dbnce.update()\par
00653         my_button.tb_dbnce.enable()\par
00654         my_button.dbnc = {\cf17 True}\par
00655     \par
00656     {\cf19 if} (my_button.tb_dbnce.check()):\par
00657         my_button.tb_dbnce.set_next()\par
00658         {\cf19 if} (my_button.is_2nd_zero()):\par
00659             {\cf19 if} ({\cf19 not} boolButton):\par
00660                 my_signal.set_ss((my_signal.ss + 1) % 4)\par
00661                 my_signal.calculate()\par
00662                 my_button.tb_dbnce.disable()\par
00663                 my_button.dbnc = {\cf17 False}\par
00664             {\cf19 else}: \par
00665                 my_button.clear_zflag()\par
00666         {\cf19 else}:\par
00667             {\cf19 if} ({\cf19 not} boolButton):\par
00668                 my_button.set_zflag()\par
00669     \par
00670     \par
00671     {\cf20 # Process the signal}\par
00672     {\cf19 if} (my_signal.tb_gen.check()):\par
00673         my_signal.tb_gen.set_next() \par
00674         my_dac.set_dac(my_signal.arrayV[my_signal.cnt])\par
00675         my_signal.cnt = (my_signal.cnt + 1) % SAMPLE\par
00676 \par
00677     {\cf20 # Printing the signal}\par
00678     {\cf19 if} (tb_print.check()):\par
00679         tb_print.set_next()\par
00680         {\cf19 if} (my_signal.ss == 0):\par
00681             print({\cf22 "Sinusoidal: "})\par
00682         {\cf19 elif} (my_signal.ss == 1):\par
00683             print({\cf22 "Triangular: "})\par
00684         {\cf19 elif} (my_signal.ss == 2):\par
00685             print({\cf22 "Sawtooth: "})\par
00686         {\cf19 elif} (my_signal.ss == 3):\par
00687             print({\cf22 "Square: "})\par
00688 \par
00689         print({\cf22 "Amp: "}, my_signal.amp, {\cf22 "mV"}, {\cf22 "Offset: "}, my_signal.offset, {\cf22 "mV"}, {\cf22 "Freq: "}, my_signal.freq, {\cf22 "Hz"})\par
00690         print({\cf22 "\\n"})\par
00691 \par
00692     {\cf20 # Process entering parameters}\par
00693     {\cf19 if} (my_keypad.nkey & ({\cf19 not} my_keypad.dbnc)):\par
00694         {\cf20 # To accept a number, in_param_state must be different of 0}\par
00695         {\cf19 if} (checkNumer(my_keypad.dkey) {\cf19 and} in_state):\par
00696             param = param*10 + my_keypad.dkey\par
00697             key_cnt += 1\par
00698         {\cf20 # To accept a letter except 0xD, in_param_state must be 0}\par
00699         {\cf19 elif} (checkLetter(my_keypad.dkey) {\cf19 and} ({\cf19 not} in_state)):\par
00700             my_led.set()\par
00701             {\cf19 if} (my_keypad.dkey == 0x0A):\par
00702                 in_state = 1\par
00703             {\cf19 elif} (my_keypad.dkey == 0x0B):\par
00704                 in_state = 2\par
00705             {\cf19 elif} (my_keypad.dkey == 0x0C):\par
00706                 in_state = 3\par
00707         {\cf20 # To accept a 0x0D, in_param_state must be different of 0}\par
00708         {\cf19 elif} ((my_keypad.dkey == 0x0D) {\cf19 and} in_state):\par
00709             my_led.clear()\par
00710             {\cf19 if} (in_state == 1):\par
00711                 {\cf19 if} (checkAmp(param)):\par
00712                     my_signal.set_amp(param)\par
00713                 {\cf19 else}:\par
00714                     print({\cf22 "Invalid amplitude value"})\par
00715             {\cf19 elif} (in_state == 2):\par
00716                 {\cf19 if} (checkOffset(param)):\par
00717                     my_signal.set_offset(param)\par
00718                 {\cf19 else}:\par
00719                     print({\cf22 "Invalid offset value"})\par
00720             {\cf19 elif} (in_state == 3):\par
00721                 {\cf19 if} (checkFreq(param)):\par
00722                     my_signal.set_freq(param)\par
00723                 {\cf19 else}:\par
00724                     print({\cf22 "Invalid frequency value"})\par
00725             my_signal.calculate()\par
00726             in_state = 0\par
00727             param = 0\par
00728             key_cnt = 0\par
00729         {\cf20 # Aknowledge the key}\par
00730         my_keypad.nkey = {\cf17 False}\par
00731 \par
00732 {\cf20 # End of the program}\par
00733             \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/signal_generator.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/signal_generator.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/signal_generator.py}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b signal_generator.Signal}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b signal_generator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b signal_generator.S_TO_US} = 1000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b signal_generator.US_TO_S} = 0.000001\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b signal_generator.SAMPLE} = 16\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
signal_generator.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/signal_generator.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/signal_generator.py}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: signal_generator.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class to generate signals.}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} math {\cf17 import} sin, pi\par
00010 {\cf17 from} utime {\cf17 import} ticks_us\par
00011 {\cf17 from} time_base {\cf17 import} Time_base\par
00012 \par
00013 S_TO_US = 1000000\par
00014 US_TO_S = 0.000001\par
00015 SAMPLE = 16\par
00016 \par
00017 {\cf17 class }Signal:\par
00018     ss: int             {\cf20 # Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square}\par
00019     en: bool            {\cf20 # Enable the signal generator}\par
00020     freq: int           {\cf20 # Frequency in Hz}\par
00021     amp: int            {\cf20 # Amplitude in mV}\par
00022     offset: int         {\cf20 # Offset in mV}\par
00023     value: int          {\cf20 # Current value in mV}\par
00024     arrayV = [] {\cf20 # Array of values for the signal}\par
00025     cnt: int            {\cf20 # Counter for the signal}\par
00026     tb_gen: Time_base   {\cf20 # Time base for the signal generator}\par
00027 \par
00028     {\cf17 def }__init__(self, freq: int, amp: int, offset: int, en: bool):\par
00029         {\cf22 """}\par
00030 {\cf22         Constructor for signal_generator.}\par
00031 {\cf22 }\par
00032 {\cf22         Parameters:}\par
00033 {\cf22         - ``freq`` Frequency in Hz.}\par
00034 {\cf22         - ``amp`` Amplitude in mV.}\par
00035 {\cf22         - ``offset`` Offset in mV.}\par
00036 {\cf22         - ``en`` Enable the signal generator.}\par
00037 {\cf22         """}\par
00038         self.ssss = 0\par
00039         self.enen = en\par
00040         self.freqfreq = freq\par
00041         self.ampamp = amp\par
00042         self.offsetoffset = offset\par
00043         self.valuevalue = 0\par
00044         self.cntcnt = 0\par
00045         self.tb_gentb_gen = Time_base(S_TO_US // (SAMPLE*freq), {\cf17 True})\par
00046         {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00047             self.arrayV.append(0)\par
00048 \par
00049     {\cf17 def }gen_sin(self, t: int):\par
00050         {\cf22 """}\par
00051 {\cf22         Generate a sinusoidal signal.}\par
00052 {\cf22         """}\par
00053         self.valuevalue = int(self.offsetoffset + self.ampamp*sin((2*pi*t)/SAMPLE))\par
00054 \par
00055     {\cf17 def }gen_tri(self, t: int):\par
00056         {\cf22 """}\par
00057 {\cf22         Generate a triangular signal.}\par
00058 {\cf22         """}\par
00059         {\cf19 if} (t <= SAMPLE/2):\par
00060             self.valuevalue = int(self.offsetoffset + (4*self.ampamp*t)/SAMPLE - self.ampamp)\par
00061     \par
00062         {\cf19 else}:\par
00063             self.valuevalue = int(self.offsetoffset - (4*self.ampamp*t)/SAMPLE + 3*self.ampamp)\par
00064 \par
00065     {\cf17 def }gen_saw(self, t: int):\par
00066         {\cf22 """}\par
00067 {\cf22         Generate a sawtooth signal.}\par
00068 {\cf22         """}\par
00069         self.valuevalue = int(self.offsetoffset + (2*self.ampamp*t)/SAMPLE - self.ampamp)\par
00070 \par
00071     {\cf17 def }gen_sqr(self, t: int):\par
00072         {\cf22 """}\par
00073 {\cf22         Generate a square signal.}\par
00074 {\cf22         """}\par
00075         {\cf19 if} (t <= SAMPLE/2):\par
00076             self.valuevalue = int(self.offsetoffset + self.ampamp)\par
00077     \par
00078         {\cf19 else}:\par
00079             self.valuevalue = int(self.offsetoffset - self.ampamp)\par
00080 \par
00081     {\cf17 def }calculate(self):\par
00082         {\cf22 """}\par
00083 {\cf22         Update the value of the signal generator according to the signal state.}\par
00084 {\cf22         """}\par
00085 \par
00086         {\cf19 if} {\cf19 not} self.enen:\par
00087             {\cf19 return}\par
00088 \par
00089         {\cf19 if} self.ssss == 0:\par
00090             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00091                 self.gen_sin(i + 1)\par
00092                 self.arrayV[i] = self.valuevalue - 800 {\cf20 # Offset of the DAC}\par
00093         {\cf19 elif} self.ssss == 1:\par
00094             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00095                 self.gen_tri(i + 1)\par
00096                 self.arrayV[i] = self.valuevalue - 800 {\cf20 # Offset of the DAC}\par
00097         {\cf19 elif} self.ssss == 2:\par
00098             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00099                 self.gen_saw(i + 1)\par
00100                 self.arrayV[i] = self.valuevalue - 800 {\cf20 # Offset of the DAC}\par
00101         {\cf19 elif} self.ssss == 3:\par
00102             {\cf19 for} i {\cf19 in} range(SAMPLE):\par
00103                 self.gen_sqr(i + 1)\par
00104                 self.arrayV[i] = self.valuevalue - 800 {\cf20 # Offset of the DAC}\par
00105         \par
00106 \par
00107     {\cf17 def }get_value(self) -> int:\par
00108         {\cf22 """}\par
00109 {\cf22         Get the current value of the signal generator.}\par
00110 {\cf22 }\par
00111 {\cf22         Returns:}\par
00112 {\cf22         - ``value`` Current value in mV.}\par
00113 {\cf22         """}\par
00114         {\cf19 return} self.valuevalue\par
00115 \par
00116     {\cf17 def }set_ss(self, ss: int):\par
00117         {\cf22 """}\par
00118 {\cf22         Set the signal state.}\par
00119 {\cf22 }\par
00120 {\cf22         Parameters:}\par
00121 {\cf22         - ``ss`` Signal State: 0: Sinusoidal, 1: Triangular, 2: Sawtooth, 3: Square}\par
00122 {\cf22         """}\par
00123         self.ssss = ss\par
00124 \par
00125     {\cf17 def }set_freq(self, freq: int):\par
00126         {\cf22 """}\par
00127 {\cf22         Set the frequency in Hz.}\par
00128 {\cf22 }\par
00129 {\cf22         Parameters:}\par
00130 {\cf22         - ``freq`` Frequency in Hz.}\par
00131 {\cf22         """}\par
00132         self.freqfreq = freq\par
00133         self.tb_gentb_gen.set_delta(S_TO_US // (SAMPLE*freq))\par
00134 \par
00135     {\cf17 def }set_amp(self, amp: int):\par
00136         {\cf22 """}\par
00137 {\cf22         Set the amplitude in mV.}\par
00138 {\cf22 }\par
00139 {\cf22         Parameters:}\par
00140 {\cf22         - ``amp`` Amplitude in mV.}\par
00141 {\cf22         """}\par
00142         self.ampamp = amp\par
00143 \par
00144     {\cf17 def }set_offset(self, offset: int):\par
00145         {\cf22 """}\par
00146 {\cf22         Set the offset in mV.}\par
00147 {\cf22 }\par
00148 {\cf22         Parameters:}\par
00149 {\cf22         - ``offset`` Offset in mV.}\par
00150 {\cf22         """}\par
00151         self.offsetoffset = offset\par
00152     \par
00153     \par
00154 \par
00155 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/time_base.py File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/time_base.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/time_base.py}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b time_base.Time_base}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b time_base}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time_base.py\par \pard\plain 
{\tc\tcl2 \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/time_base.py}
{\xe \v C:/Users/johan/OneDrive - Universidad de Antioquia/Semestre VII/Elec. Digital III/Laboratorio/Practica_3/digital_signal_generator/polling_microPython/time_base.py}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf22 """}\par
00002 {\cf22  - ``file``: time_base.py}\par
00003 {\cf22  - ``Author``:  MST_CDA}\par
00004 {\cf22  - ``Version``:  1.0}\par
00005 {\cf22  - ``Date``:  2024-04-14}\par
00006 {\cf22  - ``Description``: This module define a class for time_base, wich is the key for the polling strategy.}\par
00007 {\cf22 """}\par
00008 \par
00009 {\cf17 from} utime {\cf17 import} ticks_us\par
00010 \par
00011 {\cf17 class }Time_base:\par
00012     {\cf22 """}\par
00013 {\cf22     Class for time_base.}\par
00014 {\cf22     It is the key for the polling strategy.}\par
00015 {\cf22     """}\par
00016 \par
00017     next: int\par
00018     delta: int\par
00019     en: bool\par
00020 \par
00021     {\cf17 def }__init__(self, us: int, en: bool):\par
00022         {\cf22 """}\par
00023 {\cf22         Constructor for time_base.}\par
00024 {\cf22 }\par
00025 {\cf22         Parameters:}\par
00026 {\cf22         - ``us`` Time in microseconds.}\par
00027 {\cf22         - ``en`` Enable the timer.}\par
00028 {\cf22         """}\par
00029         self.nextnext = ticks_us() + us\par
00030         self.deltadelta = us\par
00031         self.enen = en\par
00032     \par
00033     {\cf17 def }check(self):\par
00034         {\cf22 """}\par
00035 {\cf22         Check if the timer has expired.}\par
00036 {\cf22 }\par
00037 {\cf22         Returns:}\par
00038 {\cf22         - ``bool`` True if the timer has expired.}\par
00039 {\cf22         """}\par
00040         {\cf19 return} (self.enen {\cf19 and} ticks_us() >= self.nextnext)\par
00041     \par
00042     {\cf17 def }update(self):\par
00043         {\cf22 """}\par
00044 {\cf22         Update the next time in microseconds.}\par
00045 {\cf22         """}\par
00046         self.nextnext = ticks_us() + self.deltadelta\par
00047 \par
00048     {\cf17 def }set_next(self):\par
00049         {\cf22 """}\par
00050 {\cf22         Set the next time in microseconds.}\par
00051 {\cf22         """}\par
00052         self.nextnext = self.nextnext + self.deltadelta\par
00053 \par
00054     {\cf17 def }enable(self):\par
00055         {\cf22 """}\par
00056 {\cf22         Enable the timer.}\par
00057 {\cf22         """}\par
00058         self.enen = {\cf17 True}\par
00059 \par
00060     {\cf17 def }disable(self):\par
00061         {\cf22 """}\par
00062 {\cf22         Disable the timer.}\par
00063 {\cf22         """}\par
00064         self.enen = {\cf17 False}\par
00065 \par
00066     {\cf17 def }set_delta(self, us: int):\par
00067         {\cf22 """}\par
00068 {\cf22         Set the time in microseconds.}\par
00069 {\cf22 }\par
00070 {\cf22         Parameters:}\par
00071 {\cf22         - ``us`` Time in microseconds.}\par
00072 {\cf22         """}\par
00073         self.deltadelta = us\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
